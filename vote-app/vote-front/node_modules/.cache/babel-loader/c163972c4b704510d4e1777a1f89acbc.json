{"ast":null,"code":"var _jsxFileName = \"/Users/zhengwen/Desktop/vote/vote-front/src/ViewVote.js\",\n    _s = $RefreshSig$();\n\n// 投票查看及交互页面\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { forceLogin, useAxios } from './hooks';\nimport './ViewVote.css';\nimport _ from 'lodash';\nimport dayjs from 'dayjs';\nimport { useImmer } from \"use-immer\";\nimport { Button, Progress } from 'antd';\nimport 'antd/dist/antd.css';\n/**\n * 投票页面的信息是实时更新的\n * 实现这个需求有两种方案：\n * 一是页面加载成功后一直不断的发ajax请求来获取最新的数据，并展示出来\n *  这种做法在投票已经创建出很久以后就不够好了，因为如果创建出很久以后，大概率是不会更新的\n *  发出请求大概率是没有获取到最新信息的\n * 第二种方案为http长连接，也叫comet，即服务器在收到客户端发来的ajax请求后\n *  如果没有数据要回复给客户端，则服务器hold住这个连接，直到超时后响应空内容，或在有数据后立刻响应该请求\n *    微信/钉钉的登陆都是这个方案\n * 第三种：websocket\n *  页面加载成功后向服务器建立一个websocket连接，如果服务器有新的数据，则直接在这个ws连接上响应客户端\n *    而不用客户端主动的一直发请求\n *\n *\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewVote(_ref) {\n  _s();\n\n  var _ref2;\n\n  let {\n    userInfo\n  } = _ref;\n  var {\n    voteId\n  } = useParams();\n  var {\n    loading,\n    data,\n    error,\n    update\n  } = useAxios({\n    url: `/vote/${voteId}`\n  });\n  var [userVotes, setUserVotes] = useState(); // 从websocket上获取到的实时信息\n\n  var [selectedOptionIds, setSelectedOptionIds] = useImmer([]);\n  useEffect(() => {\n    // 如果还在加载，或者是超过截止时间，则什么也不做\n    if (loading || Date.now() > new Date(data.vote.deadline).getTime()) {\n      return;\n    }\n\n    var wsUrl = `${window.location.protocol.replace('http', 'ws')}//${window.location.host}/realtime-voteinfo/${voteId}`;\n    var ws = new WebSocket(wsUrl); // 实时接受服务器发来的最新消息\n\n    ws.onmessage = function (e) {\n      var data = JSON.parse(e.data);\n      setUserVotes(data);\n    };\n\n    return () => ws.close();\n  }, [loading, voteId]); // 为某个选项投票/或取消投票\n\n  async function voteOption(option) {\n    if (!data.vote.anonymous) {\n      var {\n        optionId\n      } = option;\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: [optionId]\n      });\n    } else {\n      // 匿名的话，发选中的\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: selectedOptionIds\n      });\n      setSelectedOptionIds([]);\n    }\n  }\n\n  function selectOption(option) {\n    var {\n      optionId\n    } = option;\n\n    if (selectedOptionIds.includes(optionId)) {\n      setSelectedOptionIds(selectedOptionIds => {\n        var idx = selectedOptionIds.indexOf(optionId);\n        selectedOptionIds.splice(idx, 1);\n      });\n    } else {\n      setSelectedOptionIds(selectedOptionIds => {\n        selectedOptionIds.push(optionId);\n      });\n    }\n  }\n\n  function handleOptionClick(option) {\n    if (data.vote.anonymous) {\n      if (votes.some(it => it.userId === userInfo.data.userId)) {\n        return;\n      }\n\n      selectOption(option);\n    } else {\n      voteOption(option);\n    }\n  }\n\n  var votes = (_ref2 = userVotes !== null && userVotes !== void 0 ? userVotes : data === null || data === void 0 ? void 0 : data.userVotes) !== null && _ref2 !== void 0 ? _ref2 : [];\n  var groupedVotes = useMemo(() => _.groupBy(votes, 'optionId'), [votes]); //用投票选项ID分组,\n  //{optionId:[]}\n\n  var uniqueUserCount = useMemo(() => _.uniqBy(votes, 'userId').length, [votes]); // 去掉同用户投票后的数量,即选项有多少人投了\n\n  if (loading) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u6295\\u7968\\u6807\\u9898:\", data.vote.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#3269da'\n      },\n      children: [\"[\", data.vote.multiple ? '多选' : '单选', \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#3269da'\n      },\n      children: [\"[\", data.vote.anonymous ? '匿名' : '公开', \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\u63CF\\u8FF0:\", data.vote.desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: data.options.map(option => {\n        //option是每个选项\n        var thisOptionVotes = groupedVotes[option.optionId] || [];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleOptionClick(option),\n          children: [option.content, \"(\\u7968\\u6570:\", thisOptionVotes.length, \")\", \"[\", uniqueUserCount == 0 ? 0 : (thisOptionVotes.length / uniqueUserCount * 100).toFixed(2), \"%]\", thisOptionVotes.some(it => it.userId == userInfo.data.userId) ? '✔️' : '', selectedOptionIds.includes(option.optionId) ? '✔️' : '', /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), thisOptionVotes.map(oneVote => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-id\",\n              children: oneVote.userId\n            }, oneVote.userId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 28\n            }, this);\n          })]\n        }, option.optionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), !!data.vote.anonymous && !votes.some(it => it.userId == userInfo.data.userId) && /*#__PURE__*/_jsxDEV(Button, {\n      disabled: !selectedOptionIds.length,\n      onClick: voteOption,\n      children: \"\\u786E\\u5B9A\\u6295\\u7968\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6295\\u7968\\u622A\\u6B62: \", dayjs(data.vote.deadline).format('YYYY-MM-DD HH:mm')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewVote, \"Z2NojYdiLcLBLO8yRwqtT1lBAsc=\", false, function () {\n  return [useParams, useAxios, useImmer];\n});\n\n_c = ViewVote;\nexport default _c2 = forceLogin(ViewVote);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewVote\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zhengwen/Desktop/vote/vote-front/src/ViewVote.js"],"names":["useParams","axios","useEffect","useState","useMemo","forceLogin","useAxios","_","dayjs","useImmer","Button","Progress","ViewVote","userInfo","voteId","loading","data","error","update","url","userVotes","setUserVotes","selectedOptionIds","setSelectedOptionIds","Date","now","vote","deadline","getTime","wsUrl","window","location","protocol","replace","host","ws","WebSocket","onmessage","e","JSON","parse","close","voteOption","option","anonymous","optionId","post","optionIds","selectOption","includes","idx","indexOf","splice","push","handleOptionClick","votes","some","it","userId","groupedVotes","groupBy","uniqueUserCount","uniqBy","length","title","color","multiple","desc","options","map","thisOptionVotes","content","toFixed","oneVote","format"],"mappings":"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","sourcesContent":["// 投票查看及交互页面\n\nimport { useParams } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useEffect, useState, useMemo } from \"react\"\nimport { forceLogin, useAxios } from './hooks'\nimport './ViewVote.css'\nimport _ from 'lodash'\nimport dayjs from 'dayjs'\nimport { useImmer } from \"use-immer\"\nimport{ Button,Progress } from 'antd'\nimport 'antd/dist/antd.css';\n\n\n\n\n/**\n * 投票页面的信息是实时更新的\n * 实现这个需求有两种方案：\n * 一是页面加载成功后一直不断的发ajax请求来获取最新的数据，并展示出来\n *  这种做法在投票已经创建出很久以后就不够好了，因为如果创建出很久以后，大概率是不会更新的\n *  发出请求大概率是没有获取到最新信息的\n * 第二种方案为http长连接，也叫comet，即服务器在收到客户端发来的ajax请求后\n *  如果没有数据要回复给客户端，则服务器hold住这个连接，直到超时后响应空内容，或在有数据后立刻响应该请求\n *    微信/钉钉的登陆都是这个方案\n * 第三种：websocket\n *  页面加载成功后向服务器建立一个websocket连接，如果服务器有新的数据，则直接在这个ws连接上响应客户端\n *    而不用客户端主动的一直发请求\n *\n *\n *\n */\nfunction ViewVote({ userInfo }) {\n  var { voteId } = useParams()\n  var { loading, data, error, update } = useAxios({ url: `/vote/${voteId}` })\n  var [userVotes, setUserVotes] = useState() // 从websocket上获取到的实时信息\n  var [selectedOptionIds, setSelectedOptionIds] = useImmer([])\n\n  useEffect(() => {\n    // 如果还在加载，或者是超过截止时间，则什么也不做\n    if (loading || Date.now() > new Date(data.vote.deadline).getTime()) {\n      return\n    }\n\n    var wsUrl = `${window.location.protocol.replace('http', 'ws')}//${window.location.host}/realtime-voteinfo/${voteId}`\n\n    var ws = new WebSocket(wsUrl)\n\n    // 实时接受服务器发来的最新消息\n    ws.onmessage = function (e) {\n      var data = JSON.parse(e.data)\n      setUserVotes(data)\n    }\n\n    return () => ws.close()\n  }, [loading, voteId])\n\n  // 为某个选项投票/或取消投票\n  async function voteOption(option) {\n    if (!data.vote.anonymous) {\n      var { optionId } = option\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: [optionId]\n      })\n    } else { // 匿名的话，发选中的\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: selectedOptionIds\n      })\n      setSelectedOptionIds([])\n    }\n  }\n\n  function selectOption(option) {\n    var { optionId } = option\n    if (selectedOptionIds.includes(optionId)) {\n      setSelectedOptionIds(selectedOptionIds => {\n        var idx = selectedOptionIds.indexOf(optionId)\n        selectedOptionIds.splice(idx, 1)\n      })\n    } else {\n      setSelectedOptionIds(selectedOptionIds => {\n        selectedOptionIds.push(optionId)\n      })\n    }\n  }\n\n  function handleOptionClick(option) {\n    if (data.vote.anonymous) {\n      if (votes.some(it => it.userId === userInfo.data.userId)) {\n        return\n      }\n      selectOption(option)\n    } else {\n      voteOption(option)\n    }\n  }\n\n  var votes = userVotes ?? data?.userVotes ?? []\n\n  var groupedVotes    = useMemo(() => _.groupBy(votes, 'optionId'), [votes])//用投票选项ID分组,\n  //{optionId:[]}\n  var uniqueUserCount = useMemo(() => _.uniqBy(votes, 'userId').length, [votes]) // 去掉同用户投票后的数量,即选项有多少人投了\n\n\n  if (loading) return 'Loading...'\n\n  return (\n    <div>\n      <h2>投票标题:{data.vote.title}</h2>\n      <span style={{color: '#3269da'}}>[{data.vote.multiple ? '多选' : '单选'}]</span>\n      <span style={{color: '#3269da'}}>[{data.vote.anonymous ? '匿名' : '公开'}]</span>\n      <h3>描述:{data.vote.desc}</h3>\n      <ol>\n        {\n          data.options.map(option => {\n           //option是每个选项\n            var thisOptionVotes = groupedVotes[option.optionId] || []\n\n            return (\n              <li onClick={() => handleOptionClick(option)} key={option.optionId}>\n                {option.content}\n                (票数:{thisOptionVotes.length})\n                {/* <div style={{width:'40px'}}>\n                <Progress size=\"small\" percent={uniqueUserCount == 0 ? 0 : (thisOptionVotes.length / uniqueUserCount * 100).toFixed(2)}/>\n                </div> */}\n                [{uniqueUserCount == 0 ? 0 : (thisOptionVotes.length / uniqueUserCount * 100).toFixed(2)}%]\n\n                {/* 当选选项的任意一票是当前登陆用户，则说明当前用户已经选择该选项 */}\n                {thisOptionVotes.some(it => it.userId == userInfo.data.userId) ? '✔️' : ''}\n\n                {selectedOptionIds.includes(option.optionId) ? '✔️' : ''}\n\n                <div/>\n                {\n                  thisOptionVotes.map(oneVote => {\n                    return <span key={oneVote.userId} className=\"user-id\">{oneVote.userId}</span>\n                  })\n                }\n              </li>\n            )\n          })\n        }\n      </ol>\n\n      {/* 匿名且当前用户没投过才显示确定投票按钮 */}\n      {!!data.vote.anonymous && !votes.some(it => it.userId == userInfo.data.userId) &&\n        <Button disabled={!selectedOptionIds.length} onClick={voteOption}>确定投票</Button>\n      }\n\n      <p>投票截止: {dayjs(data.vote.deadline).format('YYYY-MM-DD HH:mm')}</p>\n    </div>\n  )\n}\n\nexport default forceLogin(ViewVote)\n"]},"metadata":{},"sourceType":"module"}