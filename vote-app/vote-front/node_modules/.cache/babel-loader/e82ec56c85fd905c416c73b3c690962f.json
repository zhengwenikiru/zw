{"ast":null,"code":"var _jsxFileName = \"/Users/zhengwen/Desktop/vote/vote-front/src/ViewVote.js\",\n    _s = $RefreshSig$();\n\n//投票查看及交互页面\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAxios, forceLogin } from \"./hooks\";\nimport _ from 'lodash';\nimport './ViewVote.css';\nimport dayjs from 'dayjs';\nimport { useGlobalImmer } from 'use-immer-reactn'; // 投票页面的信息需要做到实时更新\n//实现该需求有两种方法\n//1.页面加载成功后不断发ajax请求获取最新的数据并展示，但是在某个投票创建出来很久以后，不再需要更新时\n// 仍然继续发请求也不会有数据更新\n// 2.采用Http长链接，也叫comet，即服务器收到客户端发来的ajax请求后//\n//如果没有数据要回复给客户端，则服务器一直保持该连接，直到连接超时响应空内容，或在有数据后立即响应该请求\n//3.采用websocket连接\n//页面加载成功后向服务器建立一个ws连接，如果有新的数据，则在这个WS连接上响应客户端\n//而不用客户端主动一直发请求\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewVote(_ref) {\n  _s();\n\n  var _ref2;\n\n  let {\n    userInfo\n  } = _ref;\n  console.log(userInfo);\n  var {\n    voteId\n  } = useParams();\n  var [userVotes, setUserVotes] = useState();\n  var {\n    loading,\n    data,\n    update,\n    error\n  } = useAxios({\n    url: '/vote/' + voteId\n  }); //发axios请求拿到对用voteId的投票信息，并解构出需要的数据\n  //get请求拿到的就是响应体，后端返回的数据在data字段上。\n\n  var [selectedOptionIds, setSelectedOptionIds] = useGlobalImmer([]);\n  useEffect(() => {\n    if (loading || Date.now() > new Date(data.vote.deadline).getTime()) {\n      return;\n    } //如果当前时间大于投票过期时间的时间戳，直接返回\n\n\n    var wsUrl = `${window.location.protocol.replace('http:', 'ws')}://${window.location.host}/realtime-voteinfo/${voteId}`; //wsUrl = ws://localhost:8080/realtime-voteinfo/:2\n\n    console.log(wsUrl);\n    var ws = new WebSocket(wsUrl); //服务器发来的就是当前投票的最新投票信息\n\n    ws.onmessage = function (e) {\n      var data = JSON.parse(e.data);\n      console.log('从ws获取到的实时投票信息', data);\n      setUserVotes(data);\n    };\n\n    return () => ws.close();\n  }, [loading, voteId]); //为某个选项投票或取消投票\n\n  async function voteOption(option) {\n    if (!data.vote.anonymous) {\n      //非匿名投票时\n      var {\n        optionId\n      } = option;\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: [optionId]\n      });\n    } else {\n      //匿名投票时，发选中的选项\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: selectedOptionIds\n      });\n      setSelectedOptionIds([]);\n    }\n  } //选中某个选项\n\n\n  function selectOption(option) {\n    var {\n      optionId\n    } = option;\n\n    if (selectedOptionIds.includes(optionId)) {\n      setSelectedOptionIds(draft => {\n        var idx = draft.indexOf(optionId);\n        draft.splice(idx, 1);\n      });\n    } else {\n      setSelectedOptionIds(draft => {\n        draft.push(optionId);\n      });\n    }\n  } //点击选项时\n\n\n  function handleOptionClick(option) {\n    if (data.vote.anonymous) {\n      if (votes.some(it => it.userId === userInfo.data.userId)) {\n        //后端数据库中包含当前用户的id,即已经投过\n        return;\n      }\n\n      selectOption(option);\n    } else {\n      voteOption(option);\n    }\n  }\n\n  var votes = (_ref2 = userVotes !== null && userVotes !== void 0 ? userVotes : data === null || data === void 0 ? void 0 : data.userVotes) !== null && _ref2 !== void 0 ? _ref2 : [];\n  var groupedVotes = useMemo(() => _.groupBy(votes, 'optionId'), [votes]); //分组后的投票数据\n\n  var uniqueUserCount = useMemo(() => _.uniqBy(votes, 'userId').length, [votes]); //去重后用户数量\n  //优先使用userVotes，如果没有再从data里读userVotes\n\n  if (loading) return 'loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u67E5\\u770B\\u6295\\u7968\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.vote.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#3269da'\n      },\n      children: [\" [\", data.vote.multiple ? '多选' : '单选', \"] \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#3269da'\n      },\n      children: [\" [\", data.vote.anonymous ? '匿名' : '公开', \"] \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: data.vote.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.options.map(option => {\n        //option 是选项本身\n        //↓当前选项的票数\n        var thisOptionVotes = groupedVotes[option.optionId] || [];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleOptionClick(option),\n          children: [option.content, \"[\", thisOptionVotes.length, \"\\u7968] [\", uniqueUserCount == 0 ? 0 : (thisOptionVotes.length / uniqueUserCount * 100).toFixed(2), \"%]\", thisOptionVotes.some(it => it.userId == userInfo.data.userId) ? '✔️' : '', selectedOptionIds.includes(option.optionId) ? '✔️' : '', thisOptionVotes.map(oneVote => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-id\",\n              children: [\" \", oneVote.userId, \" \"]\n            }, oneVote.userId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 28\n            }, this);\n          }) //用户头像暂时用id来替代\n          ]\n        }, option.optionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), !!data.vote.anonymous && !votes.some(it => it.userId == userInfo.data.userId) && /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !selectedOptionIds.length,\n      onClick: voteOption,\n      children: \"\\u786E\\u5B9A\\u6295\\u7968\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6295\\u7968\\u622A\\u6B62: \", dayjs(data.vote.deadline).format('YYYY-MM-DD HH:mm')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewVote, \"Nj+4AOlnRUFgS06TkPJrv5G+WjU=\", false, function () {\n  return [useParams, useAxios, useGlobalImmer];\n});\n\n_c = ViewVote;\nexport default _c2 = forceLogin(ViewVote);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewVote\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zhengwen/Desktop/vote/vote-front/src/ViewVote.js"],"names":["axios","useEffect","useMemo","useState","useParams","useAxios","forceLogin","_","dayjs","useGlobalImmer","ViewVote","userInfo","console","log","voteId","userVotes","setUserVotes","loading","data","update","error","url","selectedOptionIds","setSelectedOptionIds","Date","now","vote","deadline","getTime","wsUrl","window","location","protocol","replace","host","ws","WebSocket","onmessage","e","JSON","parse","close","voteOption","option","anonymous","optionId","post","optionIds","selectOption","includes","draft","idx","indexOf","splice","push","handleOptionClick","votes","some","it","userId","groupedVotes","groupBy","uniqueUserCount","uniqBy","length","title","color","multiple","desc","options","map","thisOptionVotes","content","toFixed","oneVote","format"],"mappings":"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","sourcesContent":["//投票查看及交互页面\nimport axios from \"axios\"\nimport { useEffect, useMemo, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { useAxios, forceLogin } from \"./hooks\"\nimport _ from 'lodash'\nimport './ViewVote.css'\nimport dayjs from 'dayjs'\nimport { useGlobalImmer } from 'use-immer-reactn'\n\n// 投票页面的信息需要做到实时更新\n//实现该需求有两种方法\n//1.页面加载成功后不断发ajax请求获取最新的数据并展示，但是在某个投票创建出来很久以后，不再需要更新时\n// 仍然继续发请求也不会有数据更新\n\n\n// 2.采用Http长链接，也叫comet，即服务器收到客户端发来的ajax请求后//\n//如果没有数据要回复给客户端，则服务器一直保持该连接，直到连接超时响应空内容，或在有数据后立即响应该请求\n\n//3.采用websocket连接\n//页面加载成功后向服务器建立一个ws连接，如果有新的数据，则在这个WS连接上响应客户端\n//而不用客户端主动一直发请求\n\n\n function ViewVote({userInfo}){\n   console.log(userInfo)\n    var { voteId } = useParams()\n    var [userVotes,setUserVotes]=useState()\n    var { loading ,data,update,error} = useAxios({url:'/vote/'+voteId})\n    //发axios请求拿到对用voteId的投票信息，并解构出需要的数据\n    //get请求拿到的就是响应体，后端返回的数据在data字段上。\n    var [selectedOptionIds,setSelectedOptionIds] = useGlobalImmer([])\n\n\n  useEffect(()=>{\n    if(loading || Date.now()>new Date(data.vote.deadline).getTime()){\n      return\n    }//如果当前时间大于投票过期时间的时间戳，直接返回\n\n    var wsUrl = (`${window.location.protocol.replace('http:','ws')}://${window.location.host}/realtime-voteinfo/${voteId}`)\n   //wsUrl = ws://localhost:8080/realtime-voteinfo/:2\n    console.log(wsUrl)\n    var ws = new WebSocket(wsUrl)\n    //服务器发来的就是当前投票的最新投票信息\n    ws.onmessage = function(e){\n      var data = JSON.parse(e.data)\n      console.log('从ws获取到的实时投票信息',data)\n      setUserVotes(data)\n    }\n    return ()=>ws.close()\n  },[loading,voteId])\n\n//为某个选项投票或取消投票\nasync function voteOption(option){\n  if(!data.vote.anonymous){//非匿名投票时\n    var { optionId } = option\n    await axios.post(`/vote/${voteId}`,{\n      optionIds:[optionId]\n    })\n  }else{//匿名投票时，发选中的选项\n    await axios.post(`/vote/${voteId}`,{\n      optionIds:selectedOptionIds\n    })   \n    setSelectedOptionIds([])\n  }\n}\n\n//选中某个选项\nfunction selectOption(option){\n  var { optionId } = option\n  if(selectedOptionIds.includes(optionId)){\n    setSelectedOptionIds(draft =>{\n      var idx = draft.indexOf(optionId)\n      draft.splice(idx,1)\n    })\n  }else{\n    setSelectedOptionIds(draft=>{\n      draft.push(optionId)\n    })\n  }\n}\n\n//点击选项时\nfunction handleOptionClick(option){\n    if(data.vote.anonymous){\n      if(votes.some(it => it.userId === userInfo.data.userId)){\n        //后端数据库中包含当前用户的id,即已经投过\n        return\n      }\n      selectOption(option)\n    }else{\n      voteOption(option)\n    }\n}\n\n\nvar votes = userVotes ?? data?.userVotes ?? []\n\nvar groupedVotes = useMemo(()=> _.groupBy(votes,'optionId'),[votes])//分组后的投票数据\nvar uniqueUserCount = useMemo(()=> _.uniqBy(votes,'userId').length,[votes])//去重后用户数量\n//优先使用userVotes，如果没有再从data里读userVotes\n\nif(loading) return 'loading...'\n  return(\n    <div>\n      <h1>查看投票</h1>\n      <h2>{ data.vote.title }</h2>\n      <span style={{color:'#3269da'}} > [{data.vote.multiple?'多选':'单选'}] </span>\n      <span style={{color:'#3269da'}} > [{data.vote.anonymous?'匿名':'公开'}] </span>\n      <h3>{ data.vote.desc }</h3>\n      <ul>\n        {\n          data.options.map(option =>{\n            //option 是选项本身\n            //↓当前选项的票数\n            var thisOptionVotes = groupedVotes[option.optionId] || []\n            return(\n              <li key={option.optionId} onClick={()=>handleOptionClick(option)}>\n                { option.content }\n                [{thisOptionVotes.length}票]\n                [{ uniqueUserCount == 0 ? 0: (thisOptionVotes.length/uniqueUserCount * 100).toFixed(2)}%]\n                \n                {/* 当前选项的任意一票是当前登陆用户，则说明当前用户已经选择了该项 */}\n                {thisOptionVotes.some(it=> it.userId == userInfo.data.userId) ? '✔️' : ''}\n                \n                {selectedOptionIds.includes(option.optionId) ? '✔️' : ''}\n\n                {\n                  thisOptionVotes.map(oneVote =>{\n                    return <span key={oneVote.userId} className = \"user-id\" > {oneVote.userId} </span>\n                  })\n                  //用户头像暂时用id来替代\n                }\n              </li>\n            )\n          })\n        }\n      </ul>\n\n      {/* 匿名投票，且当前用户没有投过才显示确定投票按钮 */}\n      {\n        !!data.vote.anonymous && !votes.some(it => it.userId == userInfo.data.userId) &&\n        <button disabled = {!selectedOptionIds.length} onClick={voteOption}>确定投票</button>\n      }\n\n      <p>投票截止: { dayjs(data.vote.deadline).format('YYYY-MM-DD HH:mm') }</p>\n    </div>\n  )\n}\n\nexport default forceLogin(ViewVote)"]},"metadata":{},"sourceType":"module"}