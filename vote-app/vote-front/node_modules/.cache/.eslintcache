[{"/Users/zhengwen/Desktop/vote/vote-front/src/index.js":"1","/Users/zhengwen/Desktop/vote/vote-front/src/App.js":"2","/Users/zhengwen/Desktop/vote/vote-front/src/Login.js":"3","/Users/zhengwen/Desktop/vote/vote-front/src/Register.js":"4","/Users/zhengwen/Desktop/vote/vote-front/src/Main.js":"5","/Users/zhengwen/Desktop/vote/vote-front/src/Myvotes.js":"6","/Users/zhengwen/Desktop/vote/vote-front/src/Create-vote.js":"7","/Users/zhengwen/Desktop/vote/vote-front/src/hooks.js":"8","/Users/zhengwen/Desktop/vote/vote-front/src/CurrentUserInfo.js":"9","/Users/zhengwen/Desktop/vote/vote-front/src/RequireLogin.js":"10","/Users/zhengwen/Desktop/vote/vote-front/src/ViewVote.js":"11","/Users/zhengwen/Desktop/vote/vote-front/src/Create.js":"12"},{"size":221,"mtime":1647914819283,"results":"13","hashOfConfig":"14"},{"size":1006,"mtime":1648024784507,"results":"15","hashOfConfig":"14"},{"size":1036,"mtime":1647912001232,"results":"16","hashOfConfig":"14"},{"size":696,"mtime":1648018141556,"results":"17","hashOfConfig":"14"},{"size":6525,"mtime":1648395042377,"results":"18","hashOfConfig":"14"},{"size":912,"mtime":1647941204084,"results":"19","hashOfConfig":"14"},{"size":4111,"mtime":1648378687650,"results":"20","hashOfConfig":"14"},{"size":2487,"mtime":1647918097592,"results":"21","hashOfConfig":"14"},{"size":434,"mtime":1647830111301,"results":"22","hashOfConfig":"14"},{"size":184,"mtime":1647770862952,"results":"23","hashOfConfig":"14"},{"size":5625,"mtime":1648377541129,"results":"24","hashOfConfig":"14"},{"size":636,"mtime":1648024932899,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ia6i55",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhengwen/Desktop/vote/vote-front/src/index.js",[],[],["67","68"],"/Users/zhengwen/Desktop/vote/vote-front/src/App.js",[],[],["69","70"],"/Users/zhengwen/Desktop/vote/vote-front/src/Login.js",[],[],"/Users/zhengwen/Desktop/vote/vote-front/src/Register.js",[],[],"/Users/zhengwen/Desktop/vote/vote-front/src/Main.js",["71","72"],[],"/Users/zhengwen/Desktop/vote/vote-front/src/Myvotes.js",["73","74"],[],"import { Link } from \"react-router-dom\"\nimport { forceLogin,useAxios } from \"./hooks\"\n\nfunction Myvotes({userInfo}){\n  var { loading,data,error,update } = useAxios({ url: '/vote' })\n  console.log(loading,data)\n//向后端发url为 /vote的get请求获取当前登陆用户的所有投票信息\nif(loading) return  null\n  return (\n    <div>\n      我的投票\n      <ul>\n       {\n          data.map(vote =>{\n            return (\n            <li key = { vote.voteId}>\n              <Link to={ '/view-vote/' + vote.voteId}> {vote.title} </Link>\n              <span style={{color: '#3269da'}}>[{vote.multiple ? '多选' : '单选'}]</span>\n              <span style={{color: '#3269da'}}>[{vote.anonymous ? '匿名' : '公开'}]</span>             \n            </li>\n            )\n          })\n       }\n      </ul>\n    </div>\n  )\n}\n\n\n\nexport default forceLogin(Myvotes)\n//forceLogin会把userInfo传给包裹的组件","/Users/zhengwen/Desktop/vote/vote-front/src/Create-vote.js",["75"],[],"/Users/zhengwen/Desktop/vote/vote-front/src/hooks.js",["76","77"],[],"import { useCallback,useState ,useMemo,useEffect, useContext} from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport{ UserContext } from './CurrentUserInfo'\nimport axios from \"axios\"\nimport RequireLogin from './RequireLogin'\n\n\nexport function useInput(init=''){\n  var [value,setValue] = useState(init)\n  var onChange = useCallback(function onChange(e){\n      setValue(e.target.value)\n  },[])\n  return{\n    value,onChange\n  }\n}\n\nexport function useBooleanInput(init = false){\n  var [checked,setChecked] = useState(init)\n  var onChange = useCallback(function onChange(e){\n    setChecked(e.target.checked)\n  },[])\n  return {\n    checked,onChange\n  }\n}\n\nexport function useQuery(){\n  var search = useLocation().search\n  return useMemo(()=>new URLSearchParams(search),[search])\n}\n//从url中获取?后面的部分\n\n\nexport function useAxios(config) {\n  var [data, setData] = useState() // 用来存放请求结果的\n  var [error, setError] = useState() // 用来存放错误结果的\n  var [loading, setLoading] = useState(true) // 用来存放是否还在加载中\n  var [i, setI] = useState(0)\n\n  useEffect(() => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    var req = axios({\n      ...config,\n      cancelToken: source.token\n    })\n\n    req.then(res => {\n      if (res.data.code == 0) {\n        setData(res.data.result)\n        setError(null)\n      } else {\n        setError(res.data.msg)\n      }\n      setLoading(false)\n    }).catch(e => {\n      setError(e.toString())\n      setLoading(false)\n    })\n\n    return () => source.cancel()\n  }, [config.url, i])\n\n  var update = useCallback(function update() {\n    setLoading(true)\n    setI(i => i + 1)\n  }, [])\n  return {\n    data,\n    loading,\n    error,\n    update,\n  }\n}\n\n//拿到当前登陆用户的业务Hook\nexport function useUser(){\n  return useContext(UserContext)\n  //拿到CurentUserInfo文件中 UserContext.Provider传的 userInfo的信息\n}\n\n\n//强制登陆的高阶组件，用它包裹的组件必须登陆才能显示\n  export function forceLogin(Comp){\n    function ForceLoginComp(props){\n      var userInfo = useUser()\n      if(userInfo.loading){\n        return  null\n      }\n      if(userInfo.error){\n        return <RequireLogin />\n      }\n      return <Comp {...props} userInfo = {userInfo}  />\n      //把forceLogin组件的props传给comp组件\n    }\n\n    ForceLoginComp.displayName = 'ForceLogin' +(Comp.displayName ?? Comp.name)\n\n    return ForceLoginComp\n  }","/Users/zhengwen/Desktop/vote/vote-front/src/CurrentUserInfo.js",[],[],"/Users/zhengwen/Desktop/vote/vote-front/src/RequireLogin.js",[],[],"/Users/zhengwen/Desktop/vote/vote-front/src/ViewVote.js",["78","79","80","81","82","83","84","85"],[],"// 投票查看及交互页面\n\nimport { useParams } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useEffect, useState, useMemo } from \"react\"\nimport { forceLogin, useAxios } from './hooks'\nimport './ViewVote.css'\nimport _ from 'lodash'\nimport dayjs from 'dayjs'\nimport { useImmer } from \"use-immer\"\nimport{ Button,Divider,Progress } from 'antd'\nimport 'antd/dist/antd.css';\n\n\n\n\n/**\n * 投票页面的信息是实时更新的\n * 实现这个需求有两种方案：\n * 一是页面加载成功后一直不断的发ajax请求来获取最新的数据，并展示出来\n *  这种做法在投票已经创建出很久以后就不够好了，因为如果创建出很久以后，大概率是不会更新的\n *  发出请求大概率是没有获取到最新信息的\n * 第二种方案为http长连接，也叫comet，即服务器在收到客户端发来的ajax请求后\n *  如果没有数据要回复给客户端，则服务器hold住这个连接，直到超时后响应空内容，或在有数据后立刻响应该请求\n *    微信/钉钉的登陆都是这个方案\n * 第三种：websocket\n *  页面加载成功后向服务器建立一个websocket连接，如果服务器有新的数据，则直接在这个ws连接上响应客户端\n *    而不用客户端主动的一直发请求\n *\n *\n *\n */\nfunction ViewVote({ userInfo }) {\n  var { voteId } = useParams()\n  var { loading, data, error, update } = useAxios({ url: `/vote/${voteId}` })\n  var [userVotes, setUserVotes] = useState() // 从websocket上获取到的实时信息\n  var [selectedOptionIds, setSelectedOptionIds] = useImmer([])\n\n  useEffect(() => {\n    // 如果还在加载，或者是超过截止时间，则什么也不做\n    if (loading || Date.now() > new Date(data.vote.deadline).getTime()) {\n      return\n    }\n\n    var wsUrl = `${window.location.protocol.replace('http', 'ws')}//${window.location.host}/realtime-voteinfo/${voteId}`\n\n    var ws = new WebSocket(wsUrl)\n\n    // 实时接受服务器发来的最新消息\n    ws.onmessage = function (e) {\n      var data = JSON.parse(e.data)\n      setUserVotes(data)\n    }\n\n    return () => ws.close()\n  }, [loading, voteId])\n\n  // 为某个选项投票/或取消投票\n  async function voteOption(option) {\n    if (!data.vote.anonymous) {\n      var { optionId } = option\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: [optionId]\n      })\n    } else { // 匿名的话，发选中的\n      await axios.post(`/vote/${voteId}`, {\n        optionIds: selectedOptionIds\n      })\n      setSelectedOptionIds([])\n    }\n  }\n\n  function selectOption(option) {\n    var { optionId } = option\n    if (selectedOptionIds.includes(optionId)) {\n      setSelectedOptionIds(selectedOptionIds => {\n        var idx = selectedOptionIds.indexOf(optionId)\n        selectedOptionIds.splice(idx, 1)\n      })\n    } else {\n      setSelectedOptionIds(selectedOptionIds => {\n        selectedOptionIds.push(optionId)\n      })\n    }\n  }\n\n  function handleOptionClick(option) {\n    if (data.vote.anonymous) {\n      if (votes.some(it => it.userId === userInfo.data.userId)) {\n        return\n      }\n      selectOption(option)\n    } else {\n      voteOption(option)\n    }\n  }\n\n  var votes = userVotes ?? data?.userVotes ?? []\n\n  var groupedVotes    = useMemo(() => _.groupBy(votes, 'optionId'), [votes])//用投票选项ID分组,\n  //{optionId:[]}\n  var uniqueUserCount = useMemo(() => _.uniqBy(votes, 'userId').length, [votes]) // 去掉同用户投票后的数量,即选项有多少人投了\n\n\n  if (loading) return 'Loading...'\n\n  return (\n    <div className=\"father\">\n      <div>\n         <Divider orientation=\"left\"><h2>投票标题:{data.vote.title}</h2></Divider>\n    \n      <span style={{color: '#3269da'}}>[{data.vote.multiple ? '多选' : '单选'}](多投只取第一个)</span>\n      <span style={{color: '#3269da'}}>[{data.vote.anonymous ? '匿名' : '公开'}]</span>\n      <h3>描述:{data.vote.desc}</h3>\n      <ol>\n        {\n          data.options.map(option => {\n           //option是每个选项\n            var thisOptionVotes = groupedVotes[option.optionId] || []\n\n            return (\n              <li onClick={() => handleOptionClick(option)} key={option.optionId}>\n                {option.content}\n                (票数:{thisOptionVotes.length})\n                {thisOptionVotes.some(it => it.userId == userInfo.data.userId) ? '✔️' : ''}\n                <div style={{width:'170px'}}>\n                <Progress size=\"small\" percent={uniqueUserCount == 0 ? 0 : (thisOptionVotes.length / uniqueUserCount * 100).toFixed(2)}/>\n                </div>\n                {/* [{uniqueUserCount == 0 ? 0 : (thisOptionVotes.length / uniqueUserCount * 100).toFixed(2)}%] */}\n\n                {/* 当选选项的任意一票是当前登陆用户，则说明当前用户已经选择该选项 */}\n\n                {selectedOptionIds.includes(option.optionId) ? '✔️' : ''}\n\n                <div/>\n                {\n                  thisOptionVotes.map(oneVote => {\n                    return <span key={oneVote.userId} className=\"user-id\">{oneVote.userId}</span>\n                  })\n                }\n              </li>\n            )\n          })\n        }\n      </ol>\n\n      {/* 匿名且当前用户没投过才显示确定投票按钮 */}\n      {!!data.vote.anonymous && !votes.some(it => it.userId == userInfo.data.userId) &&\n        <Button disabled={!selectedOptionIds.length} onClick={voteOption}>确定投票</Button>\n      }\n\n      <p>投票截止日期:{dayjs(data.vote.deadline).format('YYYY-MM-DD HH:mm')}</p>\n      </div>\n     \n    </div>\n  )\n}\n\nexport default forceLogin(ViewVote)\n","/Users/zhengwen/Desktop/vote/vote-front/src/Create.js",[],[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":21,"column":9,"nodeType":"98","endLine":21,"endColumn":5254},{"ruleId":"92","severity":1,"message":"99","line":5,"column":22,"nodeType":"94","messageId":"95","endLine":5,"endColumn":27},{"ruleId":"92","severity":1,"message":"100","line":5,"column":28,"nodeType":"94","messageId":"95","endLine":5,"endColumn":34},{"ruleId":"92","severity":1,"message":"101","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":51,"column":25,"nodeType":"104","messageId":"105","endLine":51,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":64,"column":6,"nodeType":"108","endLine":64,"endColumn":21,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"99","line":35,"column":24,"nodeType":"94","messageId":"95","endLine":35,"endColumn":29},{"ruleId":"92","severity":1,"message":"100","line":35,"column":31,"nodeType":"94","messageId":"95","endLine":35,"endColumn":37},{"ruleId":"106","severity":1,"message":"110","line":56,"column":6,"nodeType":"108","endLine":56,"endColumn":23,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":98,"column":7,"nodeType":"113","endLine":98,"endColumn":49},{"ruleId":"106","severity":1,"message":"114","line":98,"column":7,"nodeType":"113","endLine":98,"endColumn":49},{"ruleId":"102","severity":1,"message":"103","line":125,"column":55,"nodeType":"104","messageId":"105","endLine":125,"endColumn":57},{"ruleId":"102","severity":1,"message":"103","line":127,"column":65,"nodeType":"104","messageId":"105","endLine":127,"endColumn":67},{"ruleId":"102","severity":1,"message":"103","line":148,"column":61,"nodeType":"104","messageId":"105","endLine":148,"endColumn":63},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.","'update' is assigned a value but never used.","'List' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has a missing dependency: 'data.vote.deadline'. Either include it or remove the dependency array.",["118"],"The 'votes' logical expression could make the dependencies of useMemo Hook (at line 100) change on every render. To fix this, wrap the initialization of 'votes' in its own useMemo() Hook.","VariableDeclarator","The 'votes' logical expression could make the dependencies of useMemo Hook (at line 102) change on every render. To fix this, wrap the initialization of 'votes' in its own useMemo() Hook.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [config, config.url, i]",{"range":"123","text":"124"},"Update the dependencies array to be: [data.vote.deadline, loading, voteId]",{"range":"125","text":"126"},[1520,1535],"[config, config.url, i]",[1489,1506],"[data.vote.deadline, loading, voteId]"]