{"remainingRequest":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/thread-loader/dist/cjs.js!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengwen/Desktop/zw/aria2gu/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengwen/Desktop/zw/aria2gu/src/App.vue","mtime":1638688317737},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/babel.config.js","mtime":1637998144475},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/thread-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js","mtime":1637998138883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy96aGVuZ3dlbi9EZXNrdG9wL3p3L2FyaWEyZ3Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBcmlhMkNsaWVudCBmcm9tICcuL2FyaWEyLWNsaWVudC5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIHNlcnZlcnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcmlhMlNlcnZlcnMnKSkgfHwgW107CiAgICByZXR1cm4gewogICAgICBnbG9iYWxTdGF0OiB7fSwKICAgICAgc2V2ZXJzOiBzZXJ2ZXJzLAogICAgICBzZWxlY3RlZFNlcnZlcjogbnVsbCwKICAgICAgYXJpYTI6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzd2l0Y2hTZXJ2ZXI6IGZ1bmN0aW9uIHN3aXRjaFNlcnZlcigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF90aGlzJGFyaWE7CgogICAgICAgIHZhciBhcmlhMjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAoX3RoaXMkYXJpYSA9IF90aGlzLmFyaWEyKSA9PT0gbnVsbCB8fCBfdGhpcyRhcmlhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRhcmlhLmNsb3NlKCk7CiAgICAgICAgICAgICAgICBfdGhpcy5nbG9iYWxTdGF0ID0ge307IC8v5YWz6Zet5b2T5YmN5pyN5Yqh5ZmoLOa4heepuueKtuaAgQoKICAgICAgICAgICAgICAgIF90aGlzLmNvbm5lY3Rpb25TdGF0dXMgPSAn6L+e5o6l5LitLi4uJzsKICAgICAgICAgICAgICAgIGFyaWEyID0gbmV3IEFyaWEyQ2xpZW50KF90aGlzLnNlbGVjdGVkU2VydmVyKTsKICAgICAgICAgICAgICAgIF90aGlzLmFyaWEyID0gYXJpYTI7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGFyaWEyLnJlYWR5KCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF90aGlzLmNvbm5lY3Rpb25TdGF0dXMgPSAn5bey6L+e5o6lJzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg1KTsKICAgICAgICAgICAgICAgIF90aGlzLmNvbm5lY3Rpb25TdGF0dXMgPSAn6L+e5o6l5aSx6LSlJzsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNSwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHN0YXJ0SW50ZXJ2YWxVcGRhdGU6IGZ1bmN0aW9uIHN0YXJ0SW50ZXJ2YWxVcGRhdGUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLmFyaWEyLmdldEdsb2JhbFN0YXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXMyLmdsb2JhbFN0YXQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA2OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwoKICAgICAgICAgICAgICAgIGlmICghKF9jb250ZXh0Mi50MCA9PSAnV1NfQ09OTkVDVF9FUlJPUicpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoX3RoaXMyLmludGVydmFsSWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgdGhyb3cgX2NvbnRleHQyLnQwOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDZdXSk7CiAgICAgIH0pKSwgMTAwMCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5zZWxlY3RlZFNlcnZlciA9IHRoaXMuc2VydmVyc1swXTsKICAgIHRoaXMuc3dpdGNoU2VydmVyKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmFyaWEyLmdldEdsb2JhbFN0YXQoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfdGhpczMuZ2xvYmFsU3RhdCA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICBfdGhpczMuc3RhcnRJbnRlcnZhbFVwZGF0ZSgpOwoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CgogICAgICAgICAgICAgIGlmICghKF9jb250ZXh0My50MCA9PSAnV1NfQ09OTkVDVF9FUlJPUicpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjbGVhckludGVydmFsKF90aGlzMy5pbnRlcnZhbElkKTsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dDMudDA7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgN11dKTsKICAgIH0pKSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGFyaWEyOiBmdW5jdGlvbiBhcmlhMigpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5hcmlhMi5nZXRHbG9iYWxTdGF0KCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF90aGlzNC5nbG9iYWxTdGF0ID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAgICAgX3RoaXM0LnN0YXJ0SW50ZXJ2YWxVcGRhdGUoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9IC8vIOW9k+WIh+aNouacjeWKoeWZqOWQjumHjeaWsOi/nuaOpeaXtixhcmlhMuWPmOS6hu+8jOWImeaJp+ihjHN0YXJ0SW50ZXJ2YWx1cGRhdGUKCiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQpOwogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAA,WAAA,MAAA,mBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,QAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,KAAA,EAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,OAFA;AAGA,MAAA,cAAA,EAAA,IAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,8BAAA,KAAA,CAAA,KAAA,0DAAA,KAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,EAAA,CAFA,CAGA;;AACA,gBAAA,KAAA,CAAA,gBAAA,GAAA,QAAA;AACA,gBAAA,KALA,GAKA,IAAA,WAAA,CAAA,KAAA,CAAA,cAAA,CALA;AAMA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AANA;AAAA;AAAA,uBAQA,KAAA,CAAA,KAAA,EARA;;AAAA;AASA,gBAAA,KAAA,CAAA,gBAAA,GAAA,KAAA;AATA;AAAA;;AAAA;AAAA;AAAA;AAWA,gBAAA,KAAA,CAAA,gBAAA,GAAA,MAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KAdA;AAeA,IAAA,mBAfA,iCAeA;AAAA;;AACA,WAAA,UAAA,GAAA,WAAA,uEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,KAAA,CAAA,aAAA,EAFA;;AAAA;AAEA,gBAAA,MAAA,CAAA,UAFA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,sBAIA,gBAAA,kBAJA;AAAA;AAAA;AAAA;;AAKA,gBAAA,aAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AALA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA,IAUA,IAVA,CAAA;AAWA;AA3BA,GAVA;AAuCA,EAAA,OAvCA,qBAuCA;AACA,SAAA,cAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,SAAA,YAAA;AACA,GA1CA;AA2CA,EAAA,OA3CA,qBA2CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGA,MAAA,CAAA,KAAA,CAAA,aAAA,EAHA;;AAAA;AAGA,cAAA,MAAA,CAAA,UAHA;;AAIA,cAAA,MAAA,CAAA,mBAAA;;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAMA,gBAAA,kBANA;AAAA;AAAA;AAAA;;AAOA,cAAA,aAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAPA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,GAvDA;AAwDA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,MAAA,CAAA,KAAA,CAAA,aAAA,EADA;;AAAA;AACA,gBAAA,MAAA,CAAA,UADA;;AAEA,gBAAA,MAAA,CAAA,mBAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAJA,CAIA;;AAJA,GAxDA;AA8DA,EAAA,aA9DA,2BA8DA;AACA,IAAA,aAAA,CAAA,KAAA,UAAA,CAAA;AACA;AAhEA,CAAA","sourcesContent":["<style lang=\"less\">\n.main {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  display: flex;\n  // 横着摆放\n  h2{\n    margin: 0;\n  }\n}\n  #nav{\n    width: 180px;\n    border-right: 1px solid;\n     padding: 10px;\n  flex-grow: 0;\n  flex-shrink: 0;\n  }\n\n.global-stat{\n  text-align: right;\n}\n  a {\n    display: block;\n    font-weight: bold;\n    color: #2c3e50;\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n\n</style>\n\n<template>\n  <div id=\"app\">\n<div class=\"main\">\n    <div id=\"nav\">\n      <select v-model=\"selectedServer\" @change=\"switchServer\">\n        <option v-for=\"(server,idx) of servers\" :key=\"server\" :value=\"idx\">{{ server.name || server.host +':'+server.port}}</option>\n      </select>\n      {{ connectionStatus }}\n      <router-link to=\"/\">正在下载({{ +globalStat.numWaiting + +globalStat.numActive }})</router-link> \n      <router-link to=\"/completed\">已完成({{ globalStat.numStopped }})</router-link>\n      <router-link to=\"/new\">新建下载</router-link>\n      <router-link to=\"/settings\">设置</router-link>\n      <routrr-link to=\"/servers\">服务器</routrr-link>\n    </div> \n    <router-view :aria2=\"aria2\" @servers-changed =\"servers = $event\" />\n  </div>\n<div class=\"global-stat\">全局上传速度:{{ globalStat.uploadSpeed }} 全局下载速度:{{ globalStat.downloadSpeed }}</div>\n</div>\n</template>\n<script>\nimport Aria2Client from './aria2-client.js'\nexport default {\n  data(){\n    var servers = JSON.parse(localStorage.getItem('aria2Servers')) || []\n    return{\n      globalStat:{},\n      severs:servers,\n      selectedServer:null,\n      aria2:null\n    }\n  },\n  methods:{\n   async switchServer(){\n     this.aria2?.close()\n     this.globalStat = {}\n     //关闭当前服务器,清空状态\n     this.connectionStatus = '连接中...'\n      var aria2 = new Aria2Client(this.selectedServer)\n    this.aria2 = aria2\n    try{\n      await aria2.ready()\n      this.connectionStatus = '已连接'\n    }catch(e){\n      this.connectionStatus = '连接失败'\n    }\n    },\n    startIntervalUpdate(){\n          this.intervalId = setInterval(async()=>{\n           try{\n             this.globalStat = await this.aria2.getGlobalStat()\n           }catch(e){\n             if(e == 'WS_CONNECT_ERROR'){\n               clearInterval(this.intervalId)\n             }else{\n               throw e\n             }\n           }\n    },1000)\n    }\n  },\n  created(){\n    this.selectedServer = this.servers[0]\n    this.switchServer()\n  },\n async mounted(){\n   // 子组件先Mounted，父组件后mounted\n   try{\n     this.globalStat = await this.aria2.getGlobalStat()\n     this.startIntervalUpdate()\n   }catch(e){\n    if(e == 'WS_CONNECT_ERROR'){\n               clearInterval(this.intervalId)\n             }else{\n               throw e\n             }\n   }\n  },\n  watch:{\n   async aria2(){\n      this.globalStat = await this.aria2.getGlobalStat()\n      this.startIntervalUpdate()\n    }// 当切换服务器后重新连接时,aria2变了，则执行startIntervalupdate\n  },\n  beforeDestroy(){\n    clearInterval(this.intervalId)\n  }\n}\n</script>\n"],"sourceRoot":"src"}]}