{"remainingRequest":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/thread-loader/dist/cjs.js!/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/babel-loader/lib/index.js!/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengwen/Desktop/xieran/aria2gu/src/views/Downloading.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/src/views/Downloading.vue","mtime":1638425971903},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/babel.config.js","mtime":1637998144475},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/thread-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/vue-loader/lib/index.js","mtime":1637998138883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Downloading.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\nul{\n  list-style: none;\n}\nli{\n  /* display: flex; */\n    cursor: pointer;\n  &.selected{\n    background-color: #ddd;\n  }\n  &:hover{\n    background-color: #eee;\n  }\n}\n</style>\n\n<template>\n  <div class=\"downloading\">\n  <h2>正在下载</h2>\n  <div>\n    <button @click=\"execSelected('pause')\">暂停</button>\n    <button @click=\"execSelected('unpause')\">开始</button>\n    <button @click=\"execSelected('remove')\">删除</button>\n    <button @click=\"selectAll\">全选</button>\n    搜索：<input type=\"text\" v-model=\"searchText\">\n    </div>\n  <ul>\n    <li v-for=\"task of visibleTasks\" :key = \"task.gid\" :class=\"{selected:selected.includes(task.gid)}\" @click=\"toggleSelected(task)\">\n      <input type=\"checkbox\" :checked=\"selected.includes(task.gid)\">\n      <span>{{ getFilename(task) }}</span>\n      |\n      <span>{{ getPercent(task) |fixed }}%</span>\n      |\n      <span>{{ task.downloadSpeed /1024 |fixed }}k/s</span>\n      |\n      <span>{{ task.status }}</span>\n      |\n      <!-- <button @click.stop=\"goDetail\">详情</button> -->\n      <router-link @click.native.stop :to=\"{name:'taskDetail',params:{gid:task.gid}}\">详情</router-link>\n      <!-- stop 使click事件不会冒泡到父元素上 -->\n    </li>\n  </ul>\n\n\n  <el-table\n    :data=\"visibleTasks\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"gid\"\n      label=\"名称\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"completedLength\"\n      label=\"进度\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n     <el-table-column\n      :formater=\"getSpeed\"      \n       label=\"速度\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n       <el-table-column\n      prop=\"status\"\n      label=\"状态\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n  </el-table>\n  </div>\n</template>\n<script>\n// @ is an alias to /src\n//formatter的值决定渲染的值\n\nexport default {\n  name: \"Downloading\",\n  data(){\n    return{\n      tasks:[],\n      selected:[],\n      searchText:'',\n    }\n  },\n  computed:{\n    visibleTasks(){\n      if(this.searchText == ''){\n        return this.tasks\n      }else{\n        return this.tasks.filter(it => {\n          it.files[0].path.toLowerCase().includes(this.searchText.toLowerCase())\n        })\n      }\n    }\n  },\n  mounted(){\n    this.updateList()\n    this.intervalId = setInterval(async()=>{\n      this.updateList()\n    },1000)\n  },\n  methods:{\n    getSpeed(row){\n      return (row.completedLength / row.totalLength * 100).toFixed(2) + '%'\n    },\n    // goDetail(task){\n    //   this.$router.push('/task/'+task.gid)\n    // },\n   async updateList(){\n       this.tasks = [\n        ...await window.aria2.tellActive(),\n        ...await window.aria2.tellWaiting(0,100)]\n    },\n    // 对选中的任务执行操作,每操作一次更新一次任务列表状态\n   async execSelected(action){\n     if(action == 'remove'){\n       try{\n         await this.$confirm('确定删除吗？')\n       }catch(e){\n          return\n       }\n     }\n      for(let gid of this.selected){\n        try{\n          await window.aria2[action](gid)\n        }catch(e){\n          this.$alert(e.message)\n          console.log(e)\n        }\n      }\n      this.updateList()\n    },\n    selectAll(){\n      if(this.selected.length == this.tasks.length){\n        this.selected=[]\n      }else{\n        this.selected = this.tasks.map(it =>it.gid)\n      }\n    },\n    toggleSelected(task){\n      var idx = this.selected.indexOf(task.gid)\n      if(idx ==-1){\n        this.selected.push(task.gid,true)\n      }else{\n        this.selected.splice(idx,1)\n      }\n    },\n    getFilename(task){\n      if(task.files?.[0].path){\n        return task.files[0].path.split('/').at(-1)\n      }else{\n        return task.files?.uris?.[0]?.uri.split('/').at(-1) ?? '未知'\n      }\n    },\n     getPercent(task) {\n      if (task.completedLength == 0) {\n        return 0\n      } else {\n        return task.completedLength / task.totalLength * 100\n      }\n    },\n     },\n  beforeDestroy(){\n    clearInterval(this.intervalId)\n  },\n  components: {\n  \n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}