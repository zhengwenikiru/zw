{"remainingRequest":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/eslint-loader/index.js??ref--14-0!/Users/zhengwen/Desktop/zw/aria2gu/src/aria2-client.js","dependencies":[{"path":"/Users/zhengwen/Desktop/zw/aria2gu/src/aria2-client.js","mtime":1639044448125},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/babel.config.js","mtime":1637998144475},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/eslint-loader/index.js","mtime":1637998138707}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvemhlbmd3ZW4vRGVza3RvcC96dy9hcmlhMmd1L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheS5qcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL3poZW5nd2VuL0Rlc2t0b3AvencvYXJpYTJndS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy96aGVuZ3dlbi9EZXNrdG9wL3p3L2FyaWEyZ3Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvemhlbmd3ZW4vRGVza3RvcC96dy9hcmlhMmd1L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cy5qcyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL3poZW5nd2VuL0Rlc2t0b3AvencvYXJpYTJndS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnZXZlbnRzJzsKCnZhciBBcmlhMkNsaWVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikgewogIF9pbmhlcml0cyhBcmlhMkNsaWVudCwgX0V2ZW50RW1pdHRlcik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQXJpYTJDbGllbnQpOwoKICBmdW5jdGlvbiBBcmlhMkNsaWVudChvcHRpb25zKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFyaWEyQ2xpZW50KTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpOwogICAgX3RoaXMub3B0aW9ucyA9IG9wdGlvbnM7CiAgICBfdGhpcy53ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3czovLyIuY29uY2F0KG9wdGlvbnMuaG9zdCwgIjoiKS5jb25jYXQob3B0aW9ucy5wb3J0LCAiL2pzb25ycGMiKSk7IC8vIOi/nuS4iuWQju+8jOmAmui/h+WPkemAgeivt+axguaOp+WItmFyaWEyCgogICAgX3RoaXMuY29ubmVjdFByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIF90aGlzLndlYnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgZnVuY3Rpb24gKCkgewogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CgogICAgICBfdGhpcy53ZWJzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBmdW5jdGlvbiAoZSkgewogICAgICAgIHJlamVjdCgnV1NfQ09OTkVDVElPTl9FUlJPUicpOwogICAgICB9KTsKICAgIH0pOwogICAgX3RoaXMubGFzdElkID0gMTsKICAgIF90aGlzLmNhbGxiYWNrcyA9IHt9OyAvLyDlrZjmlL7mr4/kuKror7fmsYLnmoTlm57osIPlh73mlbAKCiAgICBfdGhpcy53ZWJzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShlLmRhdGEpOyAvLyDmlLbliLDnmoTmtojmga/kuK3luKbmnIltZXRob2TlrZfmrrXvvIzor7TmmI7mmK/kuovku7YKCiAgICAgIGlmIChkYXRhLm1ldGhvZCAmJiBkYXRhLm1ldGhvZC5zdGFydHNXaXRoKCdhcmlhMi5vbicpKSB7CiAgICAgICAgdmFyIF90aGlzMjsKCiAgICAgICAgLy8g5ZyoY2xpZW505LiK6Kem5Y+R55u45bqU55qE5LqL5Lu277yM55uR5ZCs55u45bqU5LqL5Lu255qE5Zyw5pa55Y+v5Lul6Kem5Y+R5Zue6LCD5LqGCiAgICAgICAgLy8g6Kem5Y+R55Sob27nu5HlrprnmoTnm7jlupTkuovku7bvvIzmraTlpITkuovku7blkI3np7DkuI3luKZvbu+8jOaJgOS7peaYr3NsaWNlKDgpCiAgICAgICAgKF90aGlzMiA9IF90aGlzKS5lbWl0LmFwcGx5KF90aGlzMiwgW2RhdGEubWV0aG9kLnNsaWNlKDgpXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGRhdGEucGFyYW1zKSkpOyAvLyDop6blj5HnlKggY2xpZW50Lm9uRG93bmxvYWRTdGFydCDnu5HlrprnmoTnm7jlupTkuovku7YKICAgICAgICAvLyDmraTlpITkuovku7blkI3np7DmmK/luKZvbueahO+8jOaJgOS7peaYr3NsaWNlKDYpCgoKICAgICAgICB2YXIgaGFuZGxlciA9IF90aGlzW2RhdGEubWV0aG9kLnNsaWNlKDYpXTsKCiAgICAgICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBoYW5kbGVyLmFwcGx5KHZvaWQgMCwgX3RvQ29uc3VtYWJsZUFycmF5KGRhdGEucGFyYW1zKSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHZhciBjYWxsYmFjayA9IF90aGlzLmNhbGxiYWNrc1tkYXRhLmlkXTsgLy8g6YCa6L+H5ZON5bqU5raI5oGv55qEaWTlnKhjYWxsYmFja3Pph4zmn6Xlh7rlr7nlupTor7fmsYLnmoTlm57osIMKCiAgICAgICAgZGVsZXRlIF90aGlzLmNhbGxiYWNrc1tkYXRhLmlkXTsgLy8g5LuOY2FsbGJhY2tz6YeM5Yig6Zmk6L+Z5Liq5Zue6LCDCgogICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQXJpYTJDbGllbnQsIFt7CiAgICBrZXk6ICJyZWFkeSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVhZHkoKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbm5lY3RQcm9taXNlOwogICAgfQogIH0sIHsKICAgIGtleTogImNsb3NlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLndlYnNvY2tldC5jbG9zZSgpOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIF90aGlzMy53ZWJzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignY2xvc2UnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFyaWEyQ2xpZW50Owp9KEV2ZW50RW1pdHRlcik7Cgo7ClsiYWRkVXJpIiwgImFkZFRvcnJlbnQiLCAiZ2V0UGVlcnMiLCAiYWRkTWV0YWxpbmsiLCAicmVtb3ZlIiwgInBhdXNlIiwgImZvcmNlUGF1c2UiLCAicGF1c2VBbGwiLCAiZm9yY2VQYXVzZUFsbCIsICJ1bnBhdXNlIiwgInVucGF1c2VBbGwiLCAiZm9yY2VSZW1vdmUiLCAiY2hhbmdlUG9zaXRpb24iLCAidGVsbFN0YXR1cyIsICJnZXRVcmlzIiwgImdldEZpbGVzIiwgImdldFNlcnZlcnMiLCAidGVsbEFjdGl2ZSIsICJ0ZWxsV2FpdGluZyIsICJ0ZWxsU3RvcHBlZCIsICJnZXRPcHRpb24iLCAiY2hhbmdlVXJpIiwgImNoYW5nZU9wdGlvbiIsICJnZXRHbG9iYWxPcHRpb24iLCAiY2hhbmdlR2xvYmFsT3B0aW9uIiwgInB1cmdlRG93bmxvYWRSZXN1bHQiLCAicmVtb3ZlRG93bmxvYWRSZXN1bHQiLCAiZ2V0VmVyc2lvbiIsICJnZXRTZXNzaW9uSW5mbyIsICJzaHV0ZG93biIsICJmb3JjZVNodXRkb3duIiwgImdldEdsb2JhbFN0YXQiLCAic2F2ZVNlc3Npb24iXS5mb3JFYWNoKGZ1bmN0aW9uIChtZXRob2ROYW1lKSB7CiAgQXJpYTJDbGllbnQucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24gKCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgcmV0dXJuIHRoaXMuY29ubmVjdFByb21pc2UudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdmFyIGlkID0gX3RoaXM0Lmxhc3RJZCsrOwoKICAgICAgICBfdGhpczQuY2FsbGJhY2tzW2lkXSA9IGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICBpZiAoZGF0YS5lcnJvcikgewogICAgICAgICAgICByZWplY3QoZGF0YS5lcnJvcik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXNvbHZlKGRhdGEucmVzdWx0KTsKICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICBpZiAoX3RoaXM0LndlYnNvY2tldC5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuT1BFTikgewogICAgICAgICAgX3RoaXM0LndlYnNvY2tldC5zZW5kKEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAganNvbnJwYzogJzIuMCcsCiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgbWV0aG9kOiAiYXJpYTIuIi5jb25jYXQobWV0aG9kTmFtZSksCiAgICAgICAgICAgIHBhcmFtczogWyJ0b2tlbjoiLmNvbmNhdChfdGhpczQub3B0aW9ucy5zZWNyZXQpXS5jb25jYXQoYXJncykKICAgICAgICAgIH0pKTsgLy8g5Y+R6YCB56ym5ZCI5qC85byP55qEanNvbuWtl+espuS4suaOp+WItmFyaWEy77yMCgoKICAgICAgICAgIGNvbnNvbGUubG9nKCdhZnRlciBzZW5kJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJlamVjdCgnV1NfQ09OTkVDVElPTl9FUlJPUicpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsKICB9OyAvLyBBcmlhMkNsaWVudC5wcm90b3R5cGVbbWV0aG9kTmFtZSArICdwb3N0J10gPSBmdW5jdGlvbiAoLi4uYXJncykgewogIC8vICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAvLyAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpCiAgLy8gICAgIHhoci5vcGVuKCdwb3N0JywgYGh0dHA6Ly8ke3RoaXMub3B0aW9ucy5ob3N0fToke3RoaXMub3B0aW9ucy5wb3J0fS9qc29ucnBjYCkKICAvLyAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ2NvbnRlbnQtdHlwZScsICdhcHBsaWNhdGlvbi9qc29uJykKICAvLyAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAvLyAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCkKICAvLyAgICAgICBpZiAoZGF0YS5lcnJybykgewogIC8vICAgICAgICAgcmVqZWN0KGRhdGEuZXJyb3IpCiAgLy8gICAgICAgfSBlbHNlIHsKICAvLyAgICAgICAgIHJlc29sdmUoZGF0YS5yZXN1bHQpCiAgLy8gICAgICAgfQogIC8vICAgICB9CiAgLy8gICAgIHhoci5zZW5kKEpTT04uc3RyaW5naWZ5KAogIC8vICAgICAgICAgewogIC8vICAgICAgICAgICAgIGpzb25ycGM6ICcyLjAnLAogIC8vICAgICAgICAgICAgIGlkOiB0aGlzLmxhc3RJZCsrLAogIC8vICAgICAgICAgICAgIG1ldGhvZDogYGFyaWEyLiR7bWV0aG9kTmFtZX1gLAogIC8vICAgICAgICAgICAgIHBhcmFtczogWyd0b2tlbjphYmNkZWZnJywgLi4uYXJnc10sCiAgLy8gICAgICAgICB9CiAgLy8gICAgICkpCiAgLy8gICB9KQogIC8vIH0KCn0pOwpleHBvcnQgZGVmYXVsdCBBcmlhMkNsaWVudDs="},{"version":3,"sources":["/Users/zhengwen/Desktop/zw/aria2gu/src/aria2-client.js"],"names":["EventEmitter","Aria2Client","options","websocket","WebSocket","host","port","connectPromise","Promise","resolve","reject","addEventListener","e","lastId","callbacks","data","JSON","parse","method","startsWith","emit","slice","params","handler","callback","id","close","forEach","methodName","prototype","args","then","error","result","readyState","OPEN","send","stringify","jsonrpc","secret","console","log"],"mappings":"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","sourcesContent":["import EventEmitter from 'events'\n\nclass Aria2Client extends EventEmitter {\n  constructor(options) {\n    super()\n    this.options = options\n    this.websocket = new WebSocket(`ws://${options.host}:${options.port}/jsonrpc`)\n// 连上后，通过发送请求控制aria2\n    this.connectPromise = new Promise((resolve, reject) => {\n      this.websocket.addEventListener('open', () => {\n        resolve()\n      })\n      this.websocket.addEventListener('error', (e) => {\n        reject('WS_CONNECTION_ERROR')\n      })\n    })\n\n    this.lastId = 1\n\n    this.callbacks = {} // 存放每个请求的回调函数\n\n    this.websocket.addEventListener('message', e => {\n      var data = JSON.parse(e.data)\n      // 收到的消息中带有method字段，说明是事件\n      if (data.method && data.method.startsWith('aria2.on')) {\n        // 在client上触发相应的事件，监听相应事件的地方可以触发回调了\n\n        // 触发用on绑定的相应事件，此处事件名称不带on，所以是slice(8)\n        this.emit(data.method.slice(8), ...data.params)\n\n        // 触发用 client.onDownloadStart 绑定的相应事件\n        // 此处事件名称是带on的，所以是slice(6)\n        var handler = this[data.method.slice(6)]\n        if (typeof handler === 'function') {\n          handler(...data.params)\n        }\n      } else {\n        var callback = this.callbacks[data.id] // 通过响应消息的id在callbacks里查出对应请求的回调\n        delete this.callbacks[data.id] // 从callbacks里删除这个回调\n        if (typeof callback == 'function') {\n          callback(data)\n        }\n      }\n    })\n  }\n  ready() {\n    return this.connectPromise\n  }\n  close() {\n    this.websocket.close()\n    return new Promise((resolve, reject) => {\n      this.websocket.addEventListener('close', () => {\n        resolve()\n      })\n    })\n  }\n}\n\n;[\n  \"addUri\",\n  \"addTorrent\",\n  \"getPeers\",\n  \"addMetalink\",\n  \"remove\",\n  \"pause\",\n  \"forcePause\",\n  \"pauseAll\",\n  \"forcePauseAll\",\n  \"unpause\",\n  \"unpauseAll\",\n  \"forceRemove\",\n  \"changePosition\",\n  \"tellStatus\",\n  \"getUris\",\n  \"getFiles\",\n  \"getServers\",\n  \"tellActive\",\n  \"tellWaiting\",\n  \"tellStopped\",\n  \"getOption\",\n  \"changeUri\",\n  \"changeOption\",\n  \"getGlobalOption\",\n  \"changeGlobalOption\",\n  \"purgeDownloadResult\",\n  \"removeDownloadResult\",\n  \"getVersion\",\n  \"getSessionInfo\",\n  \"shutdown\",\n  \"forceShutdown\",\n  \"getGlobalStat\",\n  \"saveSession\"\n].forEach(methodName => {\n  Aria2Client.prototype[methodName] = function (...args) {\n    return this.connectPromise.then(() => {\n      return new Promise((resolve, reject) => {\n        var id = this.lastId++\n        this.callbacks[id] = function(data) {\n          if (data.error) {\n            reject(data.error)\n          } else {\n            resolve(data.result)\n          }\n        }\n        if (this.websocket.readyState === WebSocket.OPEN) {\n          this.websocket.send(JSON.stringify({\n            jsonrpc: '2.0',\n            id: id,\n            method: `aria2.${methodName}`,\n            params: [`token:${this.options.secret}`, ...args]\n          }))\n          // 发送符合格式的json字符串控制aria2，\n          console.log('after send')\n        } else {\n          reject('WS_CONNECTION_ERROR')\n        }\n      })\n    })\n  }\n\n  // Aria2Client.prototype[methodName + 'post'] = function (...args) {\n  //   return new Promise((resolve, reject) => {\n  //     var xhr = new XMLHttpRequest()\n  //     xhr.open('post', `http://${this.options.host}:${this.options.port}/jsonrpc`)\n  //     xhr.setRequestHeader('content-type', 'application/json')\n  //     xhr.onload = function () {\n  //       var data = JSON.parse(xhr.responseText)\n  //       if (data.errro) {\n  //         reject(data.error)\n  //       } else {\n  //         resolve(data.result)\n  //       }\n  //     }\n  //     xhr.send(JSON.stringify(\n  //         {\n  //             jsonrpc: '2.0',\n  //             id: this.lastId++,\n  //             method: `aria2.${methodName}`,\n  //             params: ['token:abcdefg', ...args],\n  //         }\n  //     ))\n  //   })\n  // }\n})\n\nexport default Aria2Client\n"]}]}