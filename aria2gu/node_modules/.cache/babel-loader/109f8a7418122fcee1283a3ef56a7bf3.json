{"remainingRequest":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/babel-loader/lib/index.js!/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/eslint-loader/index.js??ref--14-0!/Users/zhengwen/Desktop/xieran/aria2gu/src/aria2-client.js","dependencies":[{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/src/aria2-client.js","mtime":1638348690011},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/babel.config.js","mtime":1637998144475},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/eslint-loader/index.js","mtime":1637998138707}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvemhlbmd3ZW4vRGVza3RvcC94aWVyYW4vYXJpYTJndS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwoKLy8gaW1wb3J0IHsgcmVqZWN0IH0gZnJvbSAiY29yZS1qcy9mbi9wcm9taXNlIgp2YXIgQXJpYTJDbGllbnQgPSBmdW5jdGlvbiBBcmlhMkNsaWVudChvcHRpb25zKSB7CiAgdmFyIF90aGlzID0gdGhpczsKCiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFyaWEyQ2xpZW50KTsKCiAgdGhpcy5vcHRpb25zID0gb3B0aW9uczsKICB0aGlzLndlYnNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vIi5jb25jYXQob3B0aW9ucy5ob3N0LCAiOiIpLmNvbmNhdChvcHRpb25zLnBvcnQsICIvanNvbnJwYyIpKTsgLy8g5Y+q5pyJd2Vic29ja2V06L+e5o6l5LiK5LqG5omN5LyacmVzb2x2ZQoKICB0aGlzLmNvbm5lY3RQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIF90aGlzLndlYnNvY2tldC5hZGRFdmVudExpc3RlbmVyKCdvcGVuJywgZnVuY3Rpb24gKCkgewogICAgICByZXNvbHZlKCk7CiAgICB9KTsKICB9KTsgLy8g5Y+q6ICD6JmR6L+e5o6l5oiQ5Yqf55qE5oOF5Ya1CgogIHRoaXMubGFzdElkID0gMTsgLy8g5qCH6K6w5q+P5Liq6K+35rGC55qESUQgIOWmguaenOmHh+eUqEh0dHDvvIzljZXlkJHkvKDovpPvvIzmr4/mrKHliJvlu7rnmoTpg73mmK/mlrDov57mjqXlsLHkuI3nlKjmoIforrAKCiAgdGhpcy5jYWxsYmFja3MgPSB7fTsgLy8g5a2Y5pS+5q+P5Liq6K+35rGC55qE5Zue6LCDCiAgLy8g5qC55o2u5o6l5pS25Yiw55qE5raI5oGv55qEaWTlsZ7mgKfvvIzosIPnlKjnm7jlupTnmoTlm57osIPlh73mlbAKCiAgdGhpcy53ZWJzb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGZ1bmN0aW9uIChlKSB7CiAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UoZS5kYXRhKTsKICAgIHZhciBjYWxsYmFjayA9IF90aGlzLmNhbGxiYWNrc1tkYXRhLmlkXTsKICAgIGRlbGV0ZSBfdGhpcy5jYWxsYmFja3NbZGF0YS5pZF07CgogICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIGNhbGxiYWNrKGRhdGEpOwogICAgfQogIH0pOwp9OwoKWyJhZGRVcmkiLCAiYWRkVG9ycmVudCIsICJnZXRQZWVycyIsICJhZGRNZXRhbGluayIsICJyZW1vdmUiLCAicGF1c2UiLCAiZm9yY2VQYXVzZSIsICJwYXVzZUFsbCIsICJmb3JjZVBhdXNlQWxsIiwgInVucGF1c2UiLCAidW5wYXVzZUFsbCIsICJmb3JjZVJlbW92ZSIsICJjaGFuZ2VQb3NpdGlvbiIsICJ0ZWxsU3RhdHVzIiwgImdldFVyaXMiLCAiZ2V0RmlsZXMiLCAiZ2V0U2VydmVycyIsICJ0ZWxsQWN0aXZlIiwgInRlbGxXYWl0aW5nIiwgInRlbGxTdG9wcGVkIiwgImdldE9wdGlvbiIsICJjaGFuZ2VVcmkiLCAiY2hhbmdlT3B0aW9uIiwgImdldEdsb2JhbE9wdGlvbiIsICJjaGFuZ2VHbG9iYWxPcHRpb24iLCAicHVyZ2VEb3dubG9hZFJlc3VsdCIsICJyZW1vdmVEb3dubG9hZFJlc3VsdCIsICJnZXRWZXJzaW9uIiwgImdldFNlc3Npb25JbmZvIiwgInNodXRkb3duIiwgImZvcmNlU2h1dGRvd24iLCAiZ2V0R2xvYmFsU3RhdCIsICJzYXZlU2Vzc2lvbiJdLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZE5hbWUpIHsKICBBcmlhMkNsaWVudC5wcm90b3R5cGVbbWV0aG9kTmFtZV0gPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgIH0KCiAgICByZXR1cm4gdGhpcy5jb25uZWN0UHJvbWlzZS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB2YXIgaWQgPSBfdGhpczIubGFzdElkKys7CgogICAgICAgIF90aGlzMi5jYWxsYmFja3NbaWRdID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIGlmIChkYXRhLmVycm9yKSB7CiAgICAgICAgICAgIHJlamVjdChkYXRhLmVycm9yKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlc29sdmUoZGF0YS5yZXN1bHQpOwogICAgICAgICAgfQogICAgICAgIH07IC8vIOWQkeWQjuerr+WPkeS4gOS4qkpTT07lr7nosaEKCgogICAgICAgIF90aGlzMi53ZWJzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICBqc29ucnBjOiAnMi4wJywKICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgIG1ldGhvZDogImFyaWEyLiIuY29uY2F0KG1ldGhvZE5hbWUpLAogICAgICAgICAgcGFyYW1zOiBbInRva2VuOiIuY29uY2F0KF90aGlzMi5vcHRpb25zLnNlY3JldCldLmNvbmNhdChhcmdzKQogICAgICAgIH0pKTsKICAgICAgfSk7CiAgICB9KTsKICB9Owp9KTsgLy8g5qC55o2u5q+P5Liq6K+35rGC6L+U5Zue5LiA5LiqcHJvbWlzZe+8jAoKZXhwb3J0IGRlZmF1bHQgQXJpYTJDbGllbnQ7"},{"version":3,"sources":["/Users/zhengwen/Desktop/xieran/aria2gu/src/aria2-client.js"],"names":["Aria2Client","options","websocket","WebSocket","host","port","connectPromise","Promise","resolve","addEventListener","lastId","callbacks","e","data","JSON","parse","callback","id","forEach","methodName","prototype","args","then","reject","error","result","send","stringify","jsonrpc","method","params","secret"],"mappings":";;;;;AAAA;IAEMA,W,GACJ,qBAAYC,OAAZ,EAAoB;AAAA;;AAAA;;AAClB,OAAKA,OAAL,GAAeA,OAAf;AACA,OAAKC,SAAL,GAAiB,IAAIC,SAAJ,gBAAsBF,OAAO,CAACG,IAA9B,cAAsCH,OAAO,CAACI,IAA9C,cAAjB,CAFkB,CAGlB;;AACA,OAAKC,cAAL,GAAsB,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAG;AAC1C,IAAA,KAAI,CAACN,SAAL,CAAeO,gBAAf,CAAgC,MAAhC,EAAuC,YAAI;AACzCD,MAAAA,OAAO;AACR,KAFD;AAGD,GAJqB,CAAtB,CAJkB,CAQhB;;AACF,OAAKE,MAAL,GAAc,CAAd,CATkB,CAUpB;;AACE,OAAKC,SAAL,GAAiB,EAAjB,CAXkB,CAYlB;AAGJ;;AACI,OAAKT,SAAL,CAAeO,gBAAf,CAAgC,SAAhC,EAA0C,UAAAG,CAAC,EAAE;AAC3C,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACC,IAAb,CAAX;AACA,QAAIG,QAAQ,GAAI,KAAI,CAACL,SAAL,CAAeE,IAAI,CAACI,EAApB,CAAhB;AACA,WAAO,KAAI,CAACN,SAAL,CAAeE,IAAI,CAACI,EAApB,CAAP;;AAEA,QAAG,OAAOD,QAAP,IAAmB,UAAtB,EAAiC;AAC/BA,MAAAA,QAAQ,CAACH,IAAD,CAAR;AACD;AACF,GARD;AASD,C;;AAID,CAAC,QAAD,EACE,YADF,EAEE,UAFF,EAGE,aAHF,EAIE,QAJF,EAKE,OALF,EAME,YANF,EAOE,UAPF,EAQE,eARF,EASE,SATF,EAUE,YAVF,EAWE,aAXF,EAYE,gBAZF,EAaE,YAbF,EAcE,SAdF,EAeE,UAfF,EAgBE,YAhBF,EAiBE,YAjBF,EAkBE,aAlBF,EAmBE,aAnBF,EAoBE,WApBF,EAqBE,WArBF,EAsBE,cAtBF,EAuBE,iBAvBF,EAwBE,oBAxBF,EAyBE,qBAzBF,EA0BE,sBA1BF,EA2BE,YA3BF,EA4BE,gBA5BF,EA6BE,UA7BF,EA8BE,eA9BF,EA+BE,eA/BF,EAgCE,aAhCF,EAiCAK,OAjCA,CAiCQ,UAAAC,UAAU,EAAI;AACtBnB,EAAAA,WAAW,CAACoB,SAAZ,CAAsBD,UAAtB,IAAoC,YAAiB;AAAA;;AAAA,sCAALE,IAAK;AAALA,MAAAA,IAAK;AAAA;;AACnD,WAAO,KAAKf,cAAL,CAAoBgB,IAApB,CAAyB,YAAI;AAClC,aAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAASe,MAAT,EAAkB;AACnC,YAAIN,EAAE,GAAG,MAAI,CAACP,MAAL,EAAT;;AACA,QAAA,MAAI,CAACC,SAAL,CAAeM,EAAf,IAAqB,UAASJ,IAAT,EAAc;AACjC,cAAGA,IAAI,CAACW,KAAR,EAAc;AACZD,YAAAA,MAAM,CAACV,IAAI,CAACW,KAAN,CAAN;AACD,WAFD,MAEK;AACHhB,YAAAA,OAAO,CAACK,IAAI,CAACY,MAAN,CAAP;AACD;AACF,SAND,CAFmC,CASnC;;;AACA,QAAA,MAAI,CAACvB,SAAL,CAAewB,IAAf,CAAoBZ,IAAI,CAACa,SAAL,CAAe;AACjCC,UAAAA,OAAO,EAAC,KADyB;AAEjCX,UAAAA,EAAE,EAACA,EAF8B;AAGjCY,UAAAA,MAAM,kBAAWV,UAAX,CAH2B;AAIjCW,UAAAA,MAAM,mBAAW,MAAI,CAAC7B,OAAL,CAAa8B,MAAxB,UAAoCV,IAApC;AAJ2B,SAAf,CAApB;AAMD,OAhBM,CAAP;AAiBD,KAlBM,CAAP;AAmBD,GApBD;AAqBD,CAvDC,E,CAwDF;;AACA,eAAgBrB,WAAhB","sourcesContent":["// import { reject } from \"core-js/fn/promise\"\n\nclass Aria2Client{\n  constructor(options){\n    this.options = options\n    this.websocket = new WebSocket(`ws://${options.host}:${options.port}/jsonrpc`) \n    // 只有websocket连接上了才会resolve\n    this.connectPromise = new Promise(resolve =>{\n      this.websocket.addEventListener('open',()=>{\n        resolve()\n      })\n    })// 只考虑连接成功的情况\n    this.lastId = 1\n  // 标记每个请求的ID  如果采用Http，单向传输，每次创建的都是新连接就不用标记\n    this.callbacks = {}\n    // 存放每个请求的回调\n\n   \n// 根据接收到的消息的id属性，调用相应的回调函数\n    this.websocket.addEventListener('message',e=>{\n      var data = JSON.parse(e.data)\n      var callback  = this.callbacks[data.id]\n      delete this.callbacks[data.id]\n\n      if(typeof callback == 'function'){\n        callback(data)\n      }\n    })\n  }\n}\n\n\n  [\"addUri\",\n    \"addTorrent\",\n    \"getPeers\",\n    \"addMetalink\",\n    \"remove\",\n    \"pause\",\n    \"forcePause\",\n    \"pauseAll\",\n    \"forcePauseAll\",\n    \"unpause\",\n    \"unpauseAll\",\n    \"forceRemove\",\n    \"changePosition\",\n    \"tellStatus\",\n    \"getUris\",\n    \"getFiles\",\n    \"getServers\",\n    \"tellActive\",\n    \"tellWaiting\",\n    \"tellStopped\",\n    \"getOption\",\n    \"changeUri\",\n    \"changeOption\",\n    \"getGlobalOption\",\n    \"changeGlobalOption\",\n    \"purgeDownloadResult\",\n    \"removeDownloadResult\",\n    \"getVersion\",\n    \"getSessionInfo\",\n    \"shutdown\",\n    \"forceShutdown\",\n    \"getGlobalStat\",\n    \"saveSession\",\n].forEach(methodName => {\n  Aria2Client.prototype[methodName] = function(...args){\n    return this.connectPromise.then(()=>{\n      return new Promise((resolve,reject)=>{\n        var id = this.lastId++\n        this.callbacks[id] = function(data){\n          if(data.error){\n            reject(data.error)\n          }else{\n            resolve(data.result)\n          }\n        }\n        // 向后端发一个JSON对象\n        this.websocket.send(JSON.stringify({\n          jsonrpc:'2.0',\n          id:id,\n          method: `aria2.${methodName}`,\n          params:[`token:${this.options.secret}`,...args]\n        }))\n      })\n    })\n  }\n})\n// 根据每个请求返回一个promise，\nexport default  Aria2Client\n\n\n"]}]}