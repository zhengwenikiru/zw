{"remainingRequest":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengwen/Desktop/zw/aria2gu/src/views/Downloading.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengwen/Desktop/zw/aria2gu/src/views/Downloading.vue","mtime":1639044431724},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/babel.config.js","mtime":1637998144475},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js","mtime":1637998138883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Downloading.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\n  ul {\n    list-style: none;\n  }\n  li {\n    /* display: flex; */\n    cursor: pointer;\n    &.selected {\n      background-color: rgb(221, 221, 221);\n    }\n    &:hover {\n      background-color: skyblue;\n    }\n  }\n</style>\n<template>\n  <div class=\"downloading\">\n    <h2>正在下载</h2>\n    <div>\n      <el-button type=\"primary\" icon=\"el-icon-video-pause\" @click=\"execSelected('pause')\">暂停</el-button>\n      <el-button type=\"primary\" icon=\"el-icon-video-play\" @click=\"execSelected('unpause')\">开始</el-button>\n      <el-button type=\"primary\" icon=\"el-icon-circle-close\" @click=\"execSelected('remove')\">删除</el-button>\n      <el-button type=\"primary\" icon=\"el-icon-check\" @click=\"selectAll\">全选</el-button>\n      <el-input size=\"small\" placeholder=\"请输入内容\" prefix-icon=\"el-icon-search\" v-model=\"searchText\"/>\n    </div>\n    <ul>\n      <li v-for=\"task of visibleTasks\" :class=\"{selected: selected.includes(task.gid)}\" :key=\"task.gid\" @click=\"toggleSelect(task)\">\n        <input type=\"checkbox\" :checked=\"selected.includes(task.gid)\" >\n        <span>{{ getFilename(task) }}</span>\n        |\n        <span>{{ getPercent(task) }}</span>\n        |\n        <span>{{ task.downloadSpeed / 1024 | fixed }}k/s</span>\n        |\n        <span>{{ task.status }}</span>\n        |\n        <!-- <button @click.stop=\"goDetail(task)\">详情</button> -->\n        <router-link @click.native.stop :to=\"{name: 'taskDetail', params: {gid: task.gid}}\">详情</router-link>\n      </li>\n    </ul>\n    <el-table\n      @sort-change=\"sortChange\"\n      :data=\"visibleTasks\"\n      style=\"width: 100%\">\n      <el-table-column\n        prop=\"gid\"\n        label=\"名称\"\n        sortable>\n      </el-table-column>\n      <el-table-column\n        :formatter=\"getPercent\"\n        label=\"进度\"\n        sortable>\n      </el-table-column>\n      <el-table-column\n        :formatter=\"getSpeed\"\n        label=\"速度\"\n        sortable>\n      </el-table-column>\n      <el-table-column\n        prop=\"status\"\n        label=\"状态\"\n        sortable>\n      </el-table-column>\n    </el-table>\n\n\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nexport default {\n  name: \"Downloading\",\n  props: ['aria2'],\n  data() {\n    return {\n      tasks: [],\n      selected: [],\n      searchText: '',\n      sortColumn: '',\n    }\n  },\n  computed: {\n    visibleTasks() {\n      if (this.searchText == '') {\n        return this.tasks\n      } else {\n        return this.tasks.filter(it => {\n          return it.files[0].path.toLowerCase().includes(this.searchText.toLowerCase())\n        })\n      }\n    }\n  },\n  watch: {\n    aria2() {\n      this.tasks = []\n      this.updateList()\n    }\n  },\n  mounted() {\n    this.aria2.on('DownloadStart', () => {\n      this.updateList()\n    })\n    this.aria2.on('DownloadComplete', () => {\n      this.updateList()\n    })\n\n    this.intervalId = setInterval(async () => {\n      try {\n        await this.updateList()\n      } catch(e) {\n        if (e == 'WS_CONNECTION_ERROR') {\n          clearInterval(this.intervalId)\n        } else {\n          throw e\n        }\n      }\n    }, 100)\n  },\n  methods: {\n    // sortChange({ column, prop, order }) {\n    //   this.sortColumn = column\n    // },\n    getSpeed(row) {\n      // console.log(args)\n      return (row.downloadSpeed / 1024 ).toFixed(2) + 'k/s'\n    },\n    // goDetail(task) {\n    //   this.$router.push('/task/' + task.gid)\n    // },\n    async updateList() {\n      try {\n        this.tasks = [\n          ...await this.aria2.tellActive(),\n          ...await this.aria2.tellWaiting(0, 100)\n        ]\n      } catch(e) {\n        this.tasks = []\n        throw e\n      }\n    },\n    // 对选中的任务执行某种操作：开始，暂停，删除\n    async execSelected(action) {\n      if (action == 'remove') {\n        try {\n          await this.$confirm('确定删除吗?')\n        } catch(e) {\n          return\n        }\n      }\n\n      var selectedTask = this.tasks.filter(task => {\n        return this.selected.includes(task.gid)\n      })\n      for (let task of selectedTask) {\n        try {\n          if (action == 'pause' && task.status == 'paused') {\n            continue\n          }\n          if (action == 'unpause' && task.status == 'active') {\n            continue\n          }\n          await this.aria2[action](task.gid)\n        } catch(e) {\n          this.$alert(e.message).then(() => {\n            console.log('okkkkk')\n          })\n        }\n      }\n      this.updateList()\n    },\n    selectAll() {\n      if (this.selected.length == this.tasks.length) {\n        this.selected = []\n      } else {\n        this.selected = this.tasks.map(it => it.gid)\n      }\n    },\n    toggleSelect(task) {\n      var idx = this.selected.indexOf(task.gid)\n\n      if (idx == -1) {\n        this.selected.push(task.gid)\n      } else {\n        this.selected.splice(idx, 1)\n      }\n    },\n    getFilename(task) {\n      if (task.files?.[0].path) {\n        return task.files[0].path.split('/').at(-1)\n      } else {\n        return task.files?.uris?.[0]?.uri.split('/').at(-1) ?? '未知'\n      }\n    },\n    getPercent(task) {\n      if (task.completedLength == 0) {\n        return 0\n      } else {\n        return (task.completedLength / task.totalLength * 100).toFixed(2) +'%'\n      }\n    },\n  },\n  beforeDestroy() {\n    clearInterval(this.intervalId)\n  },\n  components: {\n\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}