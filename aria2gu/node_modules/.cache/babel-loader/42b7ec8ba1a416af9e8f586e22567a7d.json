{"remainingRequest":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengwen/Desktop/zw/aria2gu/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengwen/Desktop/zw/aria2gu/src/App.vue","mtime":1639296528206},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/babel.config.js","mtime":1637998144475},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js","mtime":1637998138883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy96aGVuZ3dlbi9EZXNrdG9wL3p3L2FyaWEyZ3Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBBcmlhMkNsaWVudCBmcm9tICcuL2FyaWEyLWNsaWVudC5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIHNlcnZlcnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcmlhMlNlcnZlcnMnKSkgfHwgW107CiAgICByZXR1cm4gewogICAgICBnbG9iYWxTdGF0OiB7fSwKICAgICAgc2VydmVyczogc2VydmVycywKICAgICAgc2VsZWN0ZWRTZXJ2ZXI6IG51bGwsCiAgICAgIGNvbm5lY3Rpb25TdGF0dXM6ICfov57mjqXkuK0uLi4nLAogICAgICBhcmlhMjogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN3aXRjaFNlcnZlcjogZnVuY3Rpb24gc3dpdGNoU2VydmVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3RoaXMkYXJpYTsKCiAgICAgICAgdmFyIGFyaWEyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzd2l0Y2ggc2VydmVyJyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5YWz6Zet546w5pyJ5pyN5Yqh5ZmoLi4uJyk7CiAgICAgICAgICAgICAgICAoX3RoaXMkYXJpYSA9IF90aGlzLmFyaWEyKSA9PT0gbnVsbCB8fCBfdGhpcyRhcmlhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRhcmlhLmNsb3NlKCk7CiAgICAgICAgICAgICAgICBfdGhpcy5nbG9iYWxTdGF0ID0ge307CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn6L+e5o6l5paw55qE5pyN5Yqh5ZmoLi4uJyk7CiAgICAgICAgICAgICAgICBfdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gJ+i/nuaOpeS4rS4uLic7CiAgICAgICAgICAgICAgICBhcmlhMiA9IG5ldyBBcmlhMkNsaWVudChfdGhpcy5zZWxlY3RlZFNlcnZlcik7CiAgICAgICAgICAgICAgICBfdGhpcy5hcmlhMiA9IGFyaWEyOyAvLyDph43mlrDkuLphcmlhMui1i+WAvAoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgcmV0dXJuIGFyaWEyLnJlYWR5KCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gJ+W3sui/nuaOpSc7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oOCk7CiAgICAgICAgICAgICAgICBfdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gJ+i/nuaOpeWksei0pSc7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzgsIDE0XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzdGFydEludGVydmFsVXBkYXRlOiBmdW5jdGlvbiBzdGFydEludGVydmFsVXBkYXRlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5hcmlhMi5nZXRHbG9iYWxTdGF0KCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzMi5nbG9iYWxTdGF0ID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKCiAgICAgICAgICAgICAgICBpZiAoIShfY29udGV4dDIudDAgPT0gJ1dTX0NPTk5FQ1RJT05fRVJST1InKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKF90aGlzMi5pbnRlcnZhbElkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIHRocm93IF9jb250ZXh0Mi50MDsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA2XV0pOwogICAgICB9KSksIDMwMDApOyAvLyDmr48zc+WIt+aWsOS4gOasoeWFqOWxgOeKtuaAgQoKICAgICAgY29uc29sZS5sb2coJ2FwcCBpbnRlcnZhbCBpZCcsIHRoaXMuaW50ZXJ2YWxJZCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2coJ2FwcCBjcmVhdGVkJyk7CiAgICB0aGlzLnNlbGVjdGVkU2VydmVyID0gdGhpcy5zZXJ2ZXJzWzBdOwogICAgdGhpcy5zd2l0Y2hTZXJ2ZXIoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpczMuYXJpYTIub24oJ0Rvd25sb2FkU3RhcnQnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyh0YXNrKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+acieS7u+WKoeW8gOWni+S6hicsIHRhc2suZ2lkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5hcmlhMi5nZXRHbG9iYWxTdGF0KCk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmdsb2JhbFN0YXQgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICBfdGhpczMuYXJpYTIub24oJ0Rvd25sb2FkQ29tcGxldGUnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdmFyIF9yZWYzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCh0YXNrKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+acieS7u+WKoeWujOaIkOS6hicsIHRhc2suZ2lkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5hcmlhMi5nZXRHbG9iYWxTdGF0KCk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmdsb2JhbFN0YXQgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSgpKTsKCiAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmFyaWEyLmdldEdsb2JhbFN0YXQoKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBfdGhpczMuZ2xvYmFsU3RhdCA9IF9jb250ZXh0NS5zZW50OwoKICAgICAgICAgICAgICBfdGhpczMuc3RhcnRJbnRlcnZhbFVwZGF0ZSgpOwoKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMik7CgogICAgICAgICAgICAgIGlmICghKF9jb250ZXh0NS50MCA9PSAnV1NfQ09OTkVDVElPTl9FUlJPUicpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dDUudDA7CgogICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTUsIG51bGwsIFtbMiwgOV1dKTsKICAgIH0pKSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGFyaWEyOiBmdW5jdGlvbiBhcmlhMigpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChfdGhpczQuaW50ZXJ2YWxJZCk7CiAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LmFyaWEyLmdldEdsb2JhbFN0YXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXM0Lmdsb2JhbFN0YXQgPSBfY29udGV4dDYuc2VudDsKCiAgICAgICAgICAgICAgICBfdGhpczQuc3RhcnRJbnRlcnZhbFVwZGF0ZSgpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTYpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxJZCk7CiAgfQp9Ow=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\">\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n#app {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  min-width: 550px;\n  border: 10px solid skyblue;\n  border-radius: 30px;\n}\n.main {\n  max-width: 800px;\n  flex-grow: 1;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  // text-align: center;\n  color: #2c3e50;\n  display: flex;\n  h2 {\n    margin: 0;\n  }\n}\n\n#nav {\n  width: 80px;\n  border-right: 1px solid;\n  padding: 10px;\n  flex-grow: 0;\n  flex-shrink: 0;\n\n  a {\n    display: block;\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: skyblue;\n    }\n  }\n}\n.global-stat {\n  text-align: right;\n}\n</style>\n<template>\n  <el-container id=\"app\">\n      <el-aside width=\"120px\" id=\"nav\">\n        <select v-model=\"selectedServer\" @change=\"switchServer\">\n          <option v-for=\"(server, idx) of servers\" :value=\"server\" :key=\"idx\">{{ server.name || (server.host + ':' + server.port) }}</option>\n        </select>\n        {{ connectionStatus }}\n        <router-link to=\"/\">正在下载({{ -(-globalStat.numWaiting - globalStat.numActive) }})</router-link>\n        <router-link to=\"/completed\">已完成({{ globalStat.numStopped }})</router-link>\n        <router-link to=\"/new\">新建下载</router-link>\n        <router-link to=\"/settings\">设置</router-link>\n        <router-link to=\"/servers\">服务器列表</router-link>\n      </el-aside>\n  <el-container>\n      <el-main class=\"main\">\n      <router-view  :aria2=\"aria2\" @servers-changed=\"servers = $event\"/>\n    </el-main>\n  </el-container>\n  </el-container>\n</template>\n<script>\nimport Aria2Client from './aria2-client.js'\n\nexport default {\n  data() {\n    var servers = JSON.parse(localStorage.getItem('aria2Servers')) || []\n    return {\n      globalStat: {},\n      servers: servers,\n      selectedServer: null,\n      connectionStatus: '连接中...',\n      aria2: null,\n    }\n  },\n  methods: {\n    async switchServer() {\n      console.log('switch server')\n      console.log('关闭现有服务器...')\n      this.aria2?.close()\n\n      this.globalStat = {}\n\n      console.log('连接新的服务器...')\n      this.connectionStatus = '连接中...'\n      var aria2 = new Aria2Client(this.selectedServer)\n      this.aria2 = aria2\n      // 重新为aria2赋值\n      try {\n        await aria2.ready()\n        this.connectionStatus = '已连接'\n      } catch(e) {\n        this.connectionStatus = '连接失败'\n      }\n    },\n    startIntervalUpdate() {\n      this.intervalId = setInterval(async () => {\n        try {\n          this.globalStat = await this.aria2.getGlobalStat()\n        } catch(e) {\n          if (e == 'WS_CONNECTION_ERROR') {\n        \n            clearInterval(this.intervalId)\n          } else {\n            throw e\n          }\n        }\n      }, 3000) // 每3s刷新一次全局状态\n      console.log('app interval id', this.intervalId)\n    }\n  },\n  created() {\n    console.log('app created')\n    this.selectedServer = this.servers[0]\n    this.switchServer()\n  },\n  async mounted() {\n\n    this.aria2.on('DownloadStart', async task => {\n      console.log('有任务开始了', task.gid)\n      this.globalStat = await this.aria2.getGlobalStat()\n    })\n    this.aria2.on('DownloadComplete', async task => {\n      console.log('有任务完成了', task.gid)\n      this.globalStat = await this.aria2.getGlobalStat()\n    })\n\n\n    try {\n      this.globalStat = await this.aria2.getGlobalStat()\n      this.startIntervalUpdate()\n\n    } catch(e) {\n      if (e == 'WS_CONNECTION_ERROR') {\n      \n      } else {\n        throw e\n      }\n    }\n  },\n  watch: {\n    async aria2() {\n      clearInterval(this.intervalId)\n      this.globalStat = await this.aria2.getGlobalStat()\n      this.startIntervalUpdate()\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.intervalId)\n  }\n}\n</script>\n"],"sourceRoot":"src"}]}