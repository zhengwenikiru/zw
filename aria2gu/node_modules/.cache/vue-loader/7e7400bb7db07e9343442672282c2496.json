{"remainingRequest":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengwen/Desktop/xieran/aria2gu/src/views/Downloading.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/src/views/Downloading.vue","mtime":1638425971903},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/thread-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/xieran/aria2gu/node_modules/vue-loader/lib/index.js","mtime":1637998138883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwovL2Zvcm1hdHRlcueahOWAvOWGs+Wumua4suafk+eahOWAvAoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEb3dubG9hZGluZyIsCiAgZGF0YSgpewogICAgcmV0dXJuewogICAgICB0YXNrczpbXSwKICAgICAgc2VsZWN0ZWQ6W10sCiAgICAgIHNlYXJjaFRleHQ6JycsCiAgICB9CiAgfSwKICBjb21wdXRlZDp7CiAgICB2aXNpYmxlVGFza3MoKXsKICAgICAgaWYodGhpcy5zZWFyY2hUZXh0ID09ICcnKXsKICAgICAgICByZXR1cm4gdGhpcy50YXNrcwogICAgICB9ZWxzZXsKICAgICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIoaXQgPT4gewogICAgICAgICAgaXQuZmlsZXNbMF0ucGF0aC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHRoaXMuc2VhcmNoVGV4dC50b0xvd2VyQ2FzZSgpKQogICAgICAgIH0pCiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQoKXsKICAgIHRoaXMudXBkYXRlTGlzdCgpCiAgICB0aGlzLmludGVydmFsSWQgPSBzZXRJbnRlcnZhbChhc3luYygpPT57CiAgICAgIHRoaXMudXBkYXRlTGlzdCgpCiAgICB9LDEwMDApCiAgfSwKICBtZXRob2RzOnsKICAgIGdldFNwZWVkKHJvdyl7CiAgICAgIHJldHVybiAocm93LmNvbXBsZXRlZExlbmd0aCAvIHJvdy50b3RhbExlbmd0aCAqIDEwMCkudG9GaXhlZCgyKSArICclJwogICAgfSwKICAgIC8vIGdvRGV0YWlsKHRhc2spewogICAgLy8gICB0aGlzLiRyb3V0ZXIucHVzaCgnL3Rhc2svJyt0YXNrLmdpZCkKICAgIC8vIH0sCiAgIGFzeW5jIHVwZGF0ZUxpc3QoKXsKICAgICAgIHRoaXMudGFza3MgPSBbCiAgICAgICAgLi4uYXdhaXQgd2luZG93LmFyaWEyLnRlbGxBY3RpdmUoKSwKICAgICAgICAuLi5hd2FpdCB3aW5kb3cuYXJpYTIudGVsbFdhaXRpbmcoMCwxMDApXQogICAgfSwKICAgIC8vIOWvuemAieS4reeahOS7u+WKoeaJp+ihjOaTjeS9nCzmr4/mk43kvZzkuIDmrKHmm7TmlrDkuIDmrKHku7vliqHliJfooajnirbmgIEKICAgYXN5bmMgZXhlY1NlbGVjdGVkKGFjdGlvbil7CiAgICAgaWYoYWN0aW9uID09ICdyZW1vdmUnKXsKICAgICAgIHRyeXsKICAgICAgICAgYXdhaXQgdGhpcy4kY29uZmlybSgn56Gu5a6a5Yig6Zmk5ZCX77yfJykKICAgICAgIH1jYXRjaChlKXsKICAgICAgICAgIHJldHVybgogICAgICAgfQogICAgIH0KICAgICAgZm9yKGxldCBnaWQgb2YgdGhpcy5zZWxlY3RlZCl7CiAgICAgICAgdHJ5ewogICAgICAgICAgYXdhaXQgd2luZG93LmFyaWEyW2FjdGlvbl0oZ2lkKQogICAgICAgIH1jYXRjaChlKXsKICAgICAgICAgIHRoaXMuJGFsZXJ0KGUubWVzc2FnZSkKICAgICAgICAgIGNvbnNvbGUubG9nKGUpCiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMudXBkYXRlTGlzdCgpCiAgICB9LAogICAgc2VsZWN0QWxsKCl7CiAgICAgIGlmKHRoaXMuc2VsZWN0ZWQubGVuZ3RoID09IHRoaXMudGFza3MubGVuZ3RoKXsKICAgICAgICB0aGlzLnNlbGVjdGVkPVtdCiAgICAgIH1lbHNlewogICAgICAgIHRoaXMuc2VsZWN0ZWQgPSB0aGlzLnRhc2tzLm1hcChpdCA9Pml0LmdpZCkKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZVNlbGVjdGVkKHRhc2spewogICAgICB2YXIgaWR4ID0gdGhpcy5zZWxlY3RlZC5pbmRleE9mKHRhc2suZ2lkKQogICAgICBpZihpZHggPT0tMSl7CiAgICAgICAgdGhpcy5zZWxlY3RlZC5wdXNoKHRhc2suZ2lkLHRydWUpCiAgICAgIH1lbHNlewogICAgICAgIHRoaXMuc2VsZWN0ZWQuc3BsaWNlKGlkeCwxKQogICAgICB9CiAgICB9LAogICAgZ2V0RmlsZW5hbWUodGFzayl7CiAgICAgIGlmKHRhc2suZmlsZXM/LlswXS5wYXRoKXsKICAgICAgICByZXR1cm4gdGFzay5maWxlc1swXS5wYXRoLnNwbGl0KCcvJykuYXQoLTEpCiAgICAgIH1lbHNlewogICAgICAgIHJldHVybiB0YXNrLmZpbGVzPy51cmlzPy5bMF0/LnVyaS5zcGxpdCgnLycpLmF0KC0xKSA/PyAn5pyq55+lJwogICAgICB9CiAgICB9LAogICAgIGdldFBlcmNlbnQodGFzaykgewogICAgICBpZiAodGFzay5jb21wbGV0ZWRMZW5ndGggPT0gMCkgewogICAgICAgIHJldHVybiAwCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRhc2suY29tcGxldGVkTGVuZ3RoIC8gdGFzay50b3RhbExlbmd0aCAqIDEwMAogICAgICB9CiAgICB9LAogICAgIH0sCiAgYmVmb3JlRGVzdHJveSgpewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQpCiAgfSwKICBjb21wb25lbnRzOiB7CiAgCiAgfSwKfTsK"},{"version":3,"sources":["Downloading.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Downloading.vue","sourceRoot":"src/views","sourcesContent":["<style lang=\"less\" scoped>\nul{\n  list-style: none;\n}\nli{\n  /* display: flex; */\n    cursor: pointer;\n  &.selected{\n    background-color: #ddd;\n  }\n  &:hover{\n    background-color: #eee;\n  }\n}\n</style>\n\n<template>\n  <div class=\"downloading\">\n  <h2>正在下载</h2>\n  <div>\n    <button @click=\"execSelected('pause')\">暂停</button>\n    <button @click=\"execSelected('unpause')\">开始</button>\n    <button @click=\"execSelected('remove')\">删除</button>\n    <button @click=\"selectAll\">全选</button>\n    搜索：<input type=\"text\" v-model=\"searchText\">\n    </div>\n  <ul>\n    <li v-for=\"task of visibleTasks\" :key = \"task.gid\" :class=\"{selected:selected.includes(task.gid)}\" @click=\"toggleSelected(task)\">\n      <input type=\"checkbox\" :checked=\"selected.includes(task.gid)\">\n      <span>{{ getFilename(task) }}</span>\n      |\n      <span>{{ getPercent(task) |fixed }}%</span>\n      |\n      <span>{{ task.downloadSpeed /1024 |fixed }}k/s</span>\n      |\n      <span>{{ task.status }}</span>\n      |\n      <!-- <button @click.stop=\"goDetail\">详情</button> -->\n      <router-link @click.native.stop :to=\"{name:'taskDetail',params:{gid:task.gid}}\">详情</router-link>\n      <!-- stop 使click事件不会冒泡到父元素上 -->\n    </li>\n  </ul>\n\n\n  <el-table\n    :data=\"visibleTasks\"\n    style=\"width: 100%\"\n    :default-sort = \"{prop: 'date', order: 'descending'}\"\n    >\n    <el-table-column\n      prop=\"gid\"\n      label=\"名称\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n    <el-table-column\n      prop=\"completedLength\"\n      label=\"进度\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n     <el-table-column\n      :formater=\"getSpeed\"      \n       label=\"速度\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n       <el-table-column\n      prop=\"status\"\n      label=\"状态\"\n      sortable\n      width=\"180\">\n    </el-table-column>\n  </el-table>\n  </div>\n</template>\n<script>\n// @ is an alias to /src\n//formatter的值决定渲染的值\n\nexport default {\n  name: \"Downloading\",\n  data(){\n    return{\n      tasks:[],\n      selected:[],\n      searchText:'',\n    }\n  },\n  computed:{\n    visibleTasks(){\n      if(this.searchText == ''){\n        return this.tasks\n      }else{\n        return this.tasks.filter(it => {\n          it.files[0].path.toLowerCase().includes(this.searchText.toLowerCase())\n        })\n      }\n    }\n  },\n  mounted(){\n    this.updateList()\n    this.intervalId = setInterval(async()=>{\n      this.updateList()\n    },1000)\n  },\n  methods:{\n    getSpeed(row){\n      return (row.completedLength / row.totalLength * 100).toFixed(2) + '%'\n    },\n    // goDetail(task){\n    //   this.$router.push('/task/'+task.gid)\n    // },\n   async updateList(){\n       this.tasks = [\n        ...await window.aria2.tellActive(),\n        ...await window.aria2.tellWaiting(0,100)]\n    },\n    // 对选中的任务执行操作,每操作一次更新一次任务列表状态\n   async execSelected(action){\n     if(action == 'remove'){\n       try{\n         await this.$confirm('确定删除吗？')\n       }catch(e){\n          return\n       }\n     }\n      for(let gid of this.selected){\n        try{\n          await window.aria2[action](gid)\n        }catch(e){\n          this.$alert(e.message)\n          console.log(e)\n        }\n      }\n      this.updateList()\n    },\n    selectAll(){\n      if(this.selected.length == this.tasks.length){\n        this.selected=[]\n      }else{\n        this.selected = this.tasks.map(it =>it.gid)\n      }\n    },\n    toggleSelected(task){\n      var idx = this.selected.indexOf(task.gid)\n      if(idx ==-1){\n        this.selected.push(task.gid,true)\n      }else{\n        this.selected.splice(idx,1)\n      }\n    },\n    getFilename(task){\n      if(task.files?.[0].path){\n        return task.files[0].path.split('/').at(-1)\n      }else{\n        return task.files?.uris?.[0]?.uri.split('/').at(-1) ?? '未知'\n      }\n    },\n     getPercent(task) {\n      if (task.completedLength == 0) {\n        return 0\n      } else {\n        return task.completedLength / task.totalLength * 100\n      }\n    },\n     },\n  beforeDestroy(){\n    clearInterval(this.intervalId)\n  },\n  components: {\n  \n  },\n};\n</script>\n"]}]}