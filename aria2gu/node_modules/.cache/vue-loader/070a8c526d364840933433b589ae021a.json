{"remainingRequest":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengwen/Desktop/zw/aria2gu/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengwen/Desktop/zw/aria2gu/src/App.vue","mtime":1639296528206},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/babel-loader/lib/index.js","mtime":1637998138838},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/cache-loader/dist/cjs.js","mtime":1637998138681},{"path":"/Users/zhengwen/Desktop/zw/aria2gu/node_modules/vue-loader/lib/index.js","mtime":1637998138883}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBcmlhMkNsaWVudCBmcm9tICcuL2FyaWEyLWNsaWVudC5qcycKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgdmFyIHNlcnZlcnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhcmlhMlNlcnZlcnMnKSkgfHwgW10KICAgIHJldHVybiB7CiAgICAgIGdsb2JhbFN0YXQ6IHt9LAogICAgICBzZXJ2ZXJzOiBzZXJ2ZXJzLAogICAgICBzZWxlY3RlZFNlcnZlcjogbnVsbCwKICAgICAgY29ubmVjdGlvblN0YXR1czogJ+i/nuaOpeS4rS4uLicsCiAgICAgIGFyaWEyOiBudWxsLAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgc3dpdGNoU2VydmVyKCkgewogICAgICBjb25zb2xlLmxvZygnc3dpdGNoIHNlcnZlcicpCiAgICAgIGNvbnNvbGUubG9nKCflhbPpl63njrDmnInmnI3liqHlmaguLi4nKQogICAgICB0aGlzLmFyaWEyPy5jbG9zZSgpCgogICAgICB0aGlzLmdsb2JhbFN0YXQgPSB7fQoKICAgICAgY29uc29sZS5sb2coJ+i/nuaOpeaWsOeahOacjeWKoeWZqC4uLicpCiAgICAgIHRoaXMuY29ubmVjdGlvblN0YXR1cyA9ICfov57mjqXkuK0uLi4nCiAgICAgIHZhciBhcmlhMiA9IG5ldyBBcmlhMkNsaWVudCh0aGlzLnNlbGVjdGVkU2VydmVyKQogICAgICB0aGlzLmFyaWEyID0gYXJpYTIKICAgICAgLy8g6YeN5paw5Li6YXJpYTLotYvlgLwKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBhcmlhMi5yZWFkeSgpCiAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gJ+W3sui/nuaOpScKICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gJ+i/nuaOpeWksei0pScKICAgICAgfQogICAgfSwKICAgIHN0YXJ0SW50ZXJ2YWxVcGRhdGUoKSB7CiAgICAgIHRoaXMuaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKGFzeW5jICgpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgdGhpcy5nbG9iYWxTdGF0ID0gYXdhaXQgdGhpcy5hcmlhMi5nZXRHbG9iYWxTdGF0KCkKICAgICAgICB9IGNhdGNoKGUpIHsKICAgICAgICAgIGlmIChlID09ICdXU19DT05ORUNUSU9OX0VSUk9SJykgewogICAgICAgIAogICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWxJZCkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRocm93IGUKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIDMwMDApIC8vIOavjzNz5Yi35paw5LiA5qyh5YWo5bGA54q25oCBCiAgICAgIGNvbnNvbGUubG9nKCdhcHAgaW50ZXJ2YWwgaWQnLCB0aGlzLmludGVydmFsSWQpCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2coJ2FwcCBjcmVhdGVkJykKICAgIHRoaXMuc2VsZWN0ZWRTZXJ2ZXIgPSB0aGlzLnNlcnZlcnNbMF0KICAgIHRoaXMuc3dpdGNoU2VydmVyKCkKICB9LAogIGFzeW5jIG1vdW50ZWQoKSB7CgogICAgdGhpcy5hcmlhMi5vbignRG93bmxvYWRTdGFydCcsIGFzeW5jIHRhc2sgPT4gewogICAgICBjb25zb2xlLmxvZygn5pyJ5Lu75Yqh5byA5aeL5LqGJywgdGFzay5naWQpCiAgICAgIHRoaXMuZ2xvYmFsU3RhdCA9IGF3YWl0IHRoaXMuYXJpYTIuZ2V0R2xvYmFsU3RhdCgpCiAgICB9KQogICAgdGhpcy5hcmlhMi5vbignRG93bmxvYWRDb21wbGV0ZScsIGFzeW5jIHRhc2sgPT4gewogICAgICBjb25zb2xlLmxvZygn5pyJ5Lu75Yqh5a6M5oiQ5LqGJywgdGFzay5naWQpCiAgICAgIHRoaXMuZ2xvYmFsU3RhdCA9IGF3YWl0IHRoaXMuYXJpYTIuZ2V0R2xvYmFsU3RhdCgpCiAgICB9KQoKCiAgICB0cnkgewogICAgICB0aGlzLmdsb2JhbFN0YXQgPSBhd2FpdCB0aGlzLmFyaWEyLmdldEdsb2JhbFN0YXQoKQogICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWxVcGRhdGUoKQoKICAgIH0gY2F0Y2goZSkgewogICAgICBpZiAoZSA9PSAnV1NfQ09OTkVDVElPTl9FUlJPUicpIHsKICAgICAgCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhyb3cgZQogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgYXN5bmMgYXJpYTIoKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKQogICAgICB0aGlzLmdsb2JhbFN0YXQgPSBhd2FpdCB0aGlzLmFyaWEyLmdldEdsb2JhbFN0YXQoKQogICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWxVcGRhdGUoKQogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKQogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<style lang=\"less\">\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n#app {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  min-width: 550px;\n  border: 10px solid skyblue;\n  border-radius: 30px;\n}\n.main {\n  max-width: 800px;\n  flex-grow: 1;\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  // text-align: center;\n  color: #2c3e50;\n  display: flex;\n  h2 {\n    margin: 0;\n  }\n}\n\n#nav {\n  width: 80px;\n  border-right: 1px solid;\n  padding: 10px;\n  flex-grow: 0;\n  flex-shrink: 0;\n\n  a {\n    display: block;\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: skyblue;\n    }\n  }\n}\n.global-stat {\n  text-align: right;\n}\n</style>\n<template>\n  <el-container id=\"app\">\n      <el-aside width=\"120px\" id=\"nav\">\n        <select v-model=\"selectedServer\" @change=\"switchServer\">\n          <option v-for=\"(server, idx) of servers\" :value=\"server\" :key=\"idx\">{{ server.name || (server.host + ':' + server.port) }}</option>\n        </select>\n        {{ connectionStatus }}\n        <router-link to=\"/\">正在下载({{ -(-globalStat.numWaiting - globalStat.numActive) }})</router-link>\n        <router-link to=\"/completed\">已完成({{ globalStat.numStopped }})</router-link>\n        <router-link to=\"/new\">新建下载</router-link>\n        <router-link to=\"/settings\">设置</router-link>\n        <router-link to=\"/servers\">服务器列表</router-link>\n      </el-aside>\n  <el-container>\n      <el-main class=\"main\">\n      <router-view  :aria2=\"aria2\" @servers-changed=\"servers = $event\"/>\n    </el-main>\n  </el-container>\n  </el-container>\n</template>\n<script>\nimport Aria2Client from './aria2-client.js'\n\nexport default {\n  data() {\n    var servers = JSON.parse(localStorage.getItem('aria2Servers')) || []\n    return {\n      globalStat: {},\n      servers: servers,\n      selectedServer: null,\n      connectionStatus: '连接中...',\n      aria2: null,\n    }\n  },\n  methods: {\n    async switchServer() {\n      console.log('switch server')\n      console.log('关闭现有服务器...')\n      this.aria2?.close()\n\n      this.globalStat = {}\n\n      console.log('连接新的服务器...')\n      this.connectionStatus = '连接中...'\n      var aria2 = new Aria2Client(this.selectedServer)\n      this.aria2 = aria2\n      // 重新为aria2赋值\n      try {\n        await aria2.ready()\n        this.connectionStatus = '已连接'\n      } catch(e) {\n        this.connectionStatus = '连接失败'\n      }\n    },\n    startIntervalUpdate() {\n      this.intervalId = setInterval(async () => {\n        try {\n          this.globalStat = await this.aria2.getGlobalStat()\n        } catch(e) {\n          if (e == 'WS_CONNECTION_ERROR') {\n        \n            clearInterval(this.intervalId)\n          } else {\n            throw e\n          }\n        }\n      }, 3000) // 每3s刷新一次全局状态\n      console.log('app interval id', this.intervalId)\n    }\n  },\n  created() {\n    console.log('app created')\n    this.selectedServer = this.servers[0]\n    this.switchServer()\n  },\n  async mounted() {\n\n    this.aria2.on('DownloadStart', async task => {\n      console.log('有任务开始了', task.gid)\n      this.globalStat = await this.aria2.getGlobalStat()\n    })\n    this.aria2.on('DownloadComplete', async task => {\n      console.log('有任务完成了', task.gid)\n      this.globalStat = await this.aria2.getGlobalStat()\n    })\n\n\n    try {\n      this.globalStat = await this.aria2.getGlobalStat()\n      this.startIntervalUpdate()\n\n    } catch(e) {\n      if (e == 'WS_CONNECTION_ERROR') {\n      \n      } else {\n        throw e\n      }\n    }\n  },\n  watch: {\n    async aria2() {\n      clearInterval(this.intervalId)\n      this.globalStat = await this.aria2.getGlobalStat()\n      this.startIntervalUpdate()\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.intervalId)\n  }\n}\n</script>\n"]}]}